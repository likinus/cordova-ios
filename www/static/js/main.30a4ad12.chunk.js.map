{"version":3,"sources":["pages/Groups/index.module.scss","components/GroupsList/groupsList.module.scss","pages/Mail/Mailing/mailing.module.scss","images/doc-file.svg","components/InputComponent/inputComponent.module.scss","pages/Schedule/schedule.module.scss","components/ErrorMessage/errorMessage.module.scss","components/Logout/logout.module.scss","components/RoundCheckbox/roundCheckbox.module.scss","images/logout.svg","images/attachment.svg","components/MessagesTable/messagesTable.module.scss","components/Headers/header.module.scss","i18n/IntlContext.jsx","actions/authorisation/constants.js","actions/authorisation/index.js","redusers/userReduser/userReduser.js","store/user.js","api/index.js","constants/index.js","history.js","sagas/userSagas.js","actions/mail/index.js","sagas/mailSagas.js","actions/index.js","sagas/saga.js","redusers/mailReducers/mailReducer.js","store/mail.js","redusers/reduser.js","redusers/index.js","sagas/watcherSaga.js","selectors/userSelectors.js","components/InputComponent/InputComponent.jsx","components/ErrorMessage/ErrorMessage.jsx","pages/Authorization/Authorization.jsx","containers/AuthorisationContainer.jsx","components/Logout/Logout.jsx","components/Headers/MaillingHeader.jsx","hoc/authorusationHoc.js","components/MessagesTable/MessagesTable.jsx","selectors/mailSelectors.js","selectors/index.js","pages/Mail/HistoryMail/HistoryMail.jsx","components/CheckBoxComponent/CheckBoxComponent.jsx","components/MessagesList/MessagesList.jsx","components/Headers/MessagesHeader.jsx","pages/Messages/Messages.jsx","pages/Message/Message.jsx","pages/Groups/AddStudentsToGroup.jsx","components/SelectComponent/SelectComponent.jsx","components/RoundCheckbox/RoundCheckbox.jsx","components/GroupsList/GroupsList.jsx","components/SendForm/SendForm.jsx","components/mailingBlock/MailingBlock.jsx","components/Radio/Radio.jsx","components/StudentsList/StudentsList.jsx","pages/Mail/Mailing/Mailing.jsx","pages/Groups/AddNewGroup.jsx","pages/Groups/EditGroup.jsx","pages/Groups/index.jsx","pages/Schedule/Schedule.jsx","App.jsx","serviceWorker.js","index.jsx","pages/Mail/HistoryMail/historyMail.module.scss","components/MessagesList/messagesList.module.scss","pages/Authorization/authorisation.module.scss","pages/Message/message.module.scss","pages/Messages/messages.module.scss","components/mailingBlock/mailingBlock.module.scss","components/SendForm/sendForm.module.scss","components/StudentsList/studentsList.module.scss"],"names":["module","exports","wrapper","content","title","titleWrapper","modalContent","sudentsContent","modalTitle","modalFormLabel","studentsLabelWrapper","buttonContainer","table","tableWrapper","head","message","border","messageTitle","icon","firstBlock","secondBlock","thirdBlock","text","rightCheckbox","rightCheckbox_text","sudentsWrapper","groupsBlock","groupsContainer","contentBlocks","__webpack_require__","p","label","checkboxWrapper","logout","container","logoutContainer","studentInfo","course","itemTitle","itemText","group","scheduleInfo","dates","timing","other","periodDates","docFile","downloadPart","downloadTitle","downloadText","linkText","infoText","downloadIcon","filename","downloadExams","iconContainer","round","close","lastBlock","fourthBlock","loadMore","fileWrapper","file","document","wrapper2","linksBlock","link","selected","enTranslation","authorisationStudentTitle","authorisationButton","insertLogin","insertPassword","journal","activity","messagesNotFound","checkUnreadMessages","loadingMore","back","previousMessage","nextMessage","messages","schedule","ruTranslation","addLocaleData","en","ru","Context","React","createContext","IntlProviderWrapper","Component","constructor","super","arguments","this","switchToEnglish","setState","locale","switchToRussian","state","render","children","props","createElement","Provider","value","IntlProvider","key","defaultLocale","constants","loginOnChange","passwordOnChange","login","addProfile","setError","clearErrorMessage","loginEmployee","getProfile","changeLocalisationMode","getMessages","setMessages","changeReadMode","isCleanRequared","cleanMessages","setCurrentMessage","getCurrentMessage","updateMessage","setUnreadMessages","getUnreadMessages","createAction","loginRowguid","deleteLoginPassword","authorisationReducer","handleActions","[object Object]","toString","_ref","payload","_ref2","password","_ref3","profile","_ref4","errorMessage","error","_ref5","bool","localisationMode","isloading","axios","create","baseURL","buildUrlParams","params","Object","keys","reduce","acc","param","concat","replace","ROUTES","mailing","mail-history","rector-mail-history","groups","TYPES","vnd.openxmlformats-officedocument.wordprocessingml.document","msword","vnd.openxmlformats-officedocument.spreadsheetml.sheet","vnd.ms-powerpoint","vnd.openxmlformats-officedocument.presentationml.presentation","ICONS","doc","DocumentIcon","docx","pdf","jpeg","jpg","png","xls","xlsx","ppt","pptx","ERRORS","error.file-upload.wrong-type","error.file-upload.size-limit","createHashHistory","rowguid","defaults","headers","common","Authorization","response","post","localStorage","setItem","data","token","put","redirect","history","push","loginSaga","pathname","getProfileSaga","get","discr","is_rector","is_admin","messagesSaga","next","faculty","employee_id","mail","select","unread","page","currentPage","fetchCourse","setCourse","fetchStudents","fetchStudentsFaled","setStudents","clearStudents","sendMessage","sendMessageSuccess","sendMessageFailed","fetchGroups","setGroups","uploadFile","fetchFaculty","setFaculty","clearFaculty","fetchEmployee","setEmployee","clearEmployee","createGroupStart","createGroupSuccess","fetchFunctionalGroups","setFunctionalGroups","destroyFunctionalGroup","addStudentsToFunctionalGroup","updateFunctionalGroup","fetchSchedule","setSchedule","editFunctionalGroup","id","console","log","addStudentsToGroup","deleteFunctionalGroup","delete","addNewGroup","fetchAllGroups","employee","_ref6","_ref7","language","courses","_ref8","filters","students","_ref9","type","callBack","errorCallBack","files","then","res","catch","errors","responseType","split","download","mailReducer","messagesTotal","items","isEmpty","hasMore","length","Number","pager","total_count","currentMessage","isSending","sendError","main","functionalGroups","isFetching","isCreating","studentsIsLoading","rootReducer","combineReducers","root","mainReduser","user","userReduser","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","takeEvery","userSelector","loginSelector","createSelector","passwordSelector","errorSelector","firstNameSelector","first_name","lastNameSelector","last_name","groupSelector","name","studentFacultySelector","localisationModeSelector","InputComponent","placeholder","inputCallback","inputValue","changeInput","e","className","s","Input","Password","onChange","mapDispatchToProps","compose","connect","onClick","Icon","style","color","withRouter","loginText","passwordText","useContext","IntlContext","loginLabel","FormattedMessage","passwordLabel","loginContainer","currentTarget","switchContainer","Switch","checked","changeLanguage","buttonsContainer","Button","disabled","shape","size","buttonText","errorContainer","ErrorMessage","Fragment","location","src","LogoutImg","alt","rector","active","unActive","NavLink","to","Logout","authorisationHoc","componentDidMount","getItem","open","destination","map","v","student","mid_name","is_read","displayMessage","includes","substr","moment","created_at","format","message_type","message_type_value","full_name","last","file_name","mailSelector","messagesSelector","hasMoreSelector","currentMessageSelector","actionMessageSelector","isUnreadMessages","rootSelector","coursesSelector","studentsSelector","groupsSelector","facultySelector","employeeSelector","scheduleSelector","undefined","checkbox","onChangeEmployee","onChangeChbox","componentWillUnmount","componentWillReceiveProps","isEqual","Option","Select","displayOptions","o","displayOptionsEmployee","d","Header","subTitle","optionFilterProp","MessagesTable","CheckBoxComponent","callback","Checkbox","target","unreadMessage","messagesList","messagesNotFoundWrapper","messageHeader","date","messageText","linkToJournal","headWrapper","href","activeClassName","firstName","lastName","getLink","url","getUnread","search","queryParams","qs","parse","usr","checkboxText","headerStyles","bind","List","action","match","Moment","width","Form","handleSubmit","preventDefault","form","validateFields","err","values","functionalGroup","checkedStudents","onCancel","getFieldDecorator","displayGroupsOptions","displayStudents","filter","Modal","centered","visible","showModal","closeIcon","fontSize","footer","modalForm","onSubmit","handleChangeGroup","index","htmlType","options","handleClear","allowClear","RoundCheckbox","number","addGroup","stringNumber","String","htmlFor","currentCroup","File","createRef","faculties","isLoading","path","alert","success","property","handleChange","typeValue","allStudents","allChecked","is_captain","isNumber","find","g","join","handleUpload","getElementById","formData","FormData","append","addEventListener","errorMessages","ref","Attachment","current","click","TextArea","rows","loading","Alert","position","zIndex","closable","onClose","Search","MailingBlock_Option","clearCours","handleFilter","groupList","functional_group","handleSelectFilter","handleAllStudents","currentGroup","isCheked","groupArray","inputContainer","marginRight","AddStudentsToGroup","SelectComponent","checkboxContainer","GroupsList","SendForm","RadioButton","Radio","handleAllCheck","handleCheckStundent","Spin","student_card_number","changeAllCheck","i","MailingBlock","StudentsList","initialValue","checkedAll","description","setFieldsValue","editGroup","Group","showEditModal","showNewModal","onCloseNewModal","onCloseEditModal","AddNewGroup","EditGroup","renderTiming","renderInfoItem","item","infoItems","isArray","Row","Col","span","first","otherText","App","Route","exact","component","AuthorizationStudentContainer","HistoryMail","Groups","Message","Messages","Mailing","Schedule","Boolean","window","hostname","renderReactDom","ReactDOM","HashRouter","cordova","navigator","serviceWorker","ready","registration","unregister","selectContainer","spinWrapper"],"mappings":"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","file":"static/js/main.30a4ad12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Groups_wrapper__RiZEp\",\"content\":\"Groups_content__3249i\",\"title\":\"Groups_title__1muOT\",\"titleWrapper\":\"Groups_titleWrapper__2_IRp\",\"modalContent\":\"Groups_modalContent__2oUEh\",\"sudentsContent\":\"Groups_sudentsContent__2rMY-\",\"modalTitle\":\"Groups_modalTitle__1ns15\",\"modalFormLabel\":\"Groups_modalFormLabel__10jeQ\",\"studentsLabelWrapper\":\"Groups_studentsLabelWrapper__2v-hr\",\"buttonContainer\":\"Groups_buttonContainer__a6lL_\",\"table\":\"Groups_table__zrK_c\",\"tableWrapper\":\"Groups_tableWrapper__3rsGU\",\"head\":\"Groups_head__1BF2E\",\"message\":\"Groups_message__zUaS3\",\"border\":\"Groups_border__1-GEU\",\"messageTitle\":\"Groups_messageTitle__1nNYe\",\"icon\":\"Groups_icon__2M2tU\",\"firstBlock\":\"Groups_firstBlock__14t8F\",\"secondBlock\":\"Groups_secondBlock__2iyY5\",\"thirdBlock\":\"Groups_thirdBlock__1deOL\",\"text\":\"Groups_text__26qr9\",\"rightCheckbox\":\"Groups_rightCheckbox__1lrHy\",\"rightCheckbox_text\":\"Groups_rightCheckbox_text__TqeQ7\",\"sudentsWrapper\":\"Groups_sudentsWrapper__2ci3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"groupsList_text__2KyZi\",\"groupsBlock\":\"groupsList_groupsBlock__3CveA\",\"groupsContainer\":\"groupsList_groupsContainer__2Ubw7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"mailing_wrapper__YSNvo\",\"content\":\"mailing_content__3l6E6\",\"contentBlocks\":\"mailing_contentBlocks__18wkg\"};","module.exports = __webpack_public_path__ + \"static/media/doc-file.375a3cb4.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"inputComponent_wrapper__bih4q\",\"label\":\"inputComponent_label__1PklD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"schedule_wrapper__3DVso\",\"content\":\"schedule_content__2OIxS\",\"checkboxWrapper\":\"schedule_checkboxWrapper__1bhns\",\"title\":\"schedule_title__1g0sQ\",\"head\":\"schedule_head__3cAOj\",\"logout\":\"schedule_logout__1iUOT\",\"container\":\"schedule_container__GREIT\",\"logoutContainer\":\"schedule_logoutContainer__1z5w2\",\"studentInfo\":\"schedule_studentInfo__3ETTk\",\"course\":\"schedule_course__1TX4d\",\"itemTitle\":\"schedule_itemTitle__GdpnV\",\"itemText\":\"schedule_itemText__2_8DO\",\"group\":\"schedule_group__JaDic\",\"scheduleInfo\":\"schedule_scheduleInfo__26-Ii\",\"dates\":\"schedule_dates__1dC5A\",\"timing\":\"schedule_timing__wqR4Z\",\"other\":\"schedule_other__1iS34\",\"periodDates\":\"schedule_periodDates__1C717\",\"docFile\":\"schedule_docFile__2sRrL\",\"downloadPart\":\"schedule_downloadPart__3Rg2h\",\"downloadTitle\":\"schedule_downloadTitle__2IFEC\",\"downloadText\":\"schedule_downloadText__1eDVY\",\"linkText\":\"schedule_linkText__3ew26\",\"infoText\":\"schedule_infoText__3rF7X\",\"downloadIcon\":\"schedule_downloadIcon__2vfhI\",\"filename\":\"schedule_filename__25Hm4\",\"downloadExams\":\"schedule_downloadExams__30WdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"errorMessage_wrapper__1hy47\",\"iconContainer\":\"errorMessage_iconContainer__h48CW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout\":\"logout_logout__2pFMB\",\"icon\":\"logout_icon__3UsBC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"round\":\"roundCheckbox_round__3ojpb\"};","module.exports = __webpack_public_path__ + \"static/media/logout.d41480d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/attachment.cd20642c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"close\":\"messagesTable_close__2S7hg\",\"table\":\"messagesTable_table__21Hz9\",\"lastBlock\":\"messagesTable_lastBlock__1l-Uz\",\"wrapper\":\"messagesTable_wrapper__2zFHn\",\"head\":\"messagesTable_head__1TvRG\",\"message\":\"messagesTable_message__3DSMV\",\"border\":\"messagesTable_border__3rZyw\",\"messageTitle\":\"messagesTable_messageTitle__2eR_N\",\"firstBlock\":\"messagesTable_firstBlock__NrljC\",\"secondBlock\":\"messagesTable_secondBlock__174YU\",\"thirdBlock\":\"messagesTable_thirdBlock__2cD5Z\",\"fourthBlock\":\"messagesTable_fourthBlock__3yxjm\",\"text\":\"messagesTable_text__2toY1\",\"loadMore\":\"messagesTable_loadMore__3gC_8\",\"fileWrapper\":\"messagesTable_fileWrapper__1U5gD\",\"file\":\"messagesTable_file__3rZ-K\",\"document\":\"messagesTable_document__3xAhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"header_wrapper__1mHb1\",\"wrapper2\":\"header_wrapper2__P78vc\",\"linksBlock\":\"header_linksBlock__CptpD\",\"link\":\"header_link__1rSna\",\"selected\":\"header_selected__NkKDF\"};","import React from 'react';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport ru from 'react-intl/locale-data/ru';\n\nconst enTranslation = {\n  //authorisation page\n  authorisationStudentTitle: 'BSMU Student Personal Account',\n  authorisationButton: 'Login',\n  insertLogin: 'Insert login:',\n  insertPassword: 'Password:',\n  //logout component\n  logout: 'Log out',\n  //messages page\n  journal: 'Gradebook',\n  activity: \"Events\",\n  messagesNotFound: 'Message could not be found',\n  checkUnreadMessages: 'Unread only',\n  loadingMore: 'Loading more',\n  //message page\n  back: 'Back',\n  previousMessage: 'previous',\n  nextMessage: 'next',\n  messages: 'Messages',\n  //schedule page\n  schedule: 'Schedule',\n  course: 'Course',\n};\n\nconst ruTranslation = {\n  //authorisation page\n  authorisationStudentTitle: 'Личный кабинет студента БГМУ',\n  authorisationButton: 'Войти',\n  insertLogin: 'Введите логин:',\n  insertPassword: 'Пароль:',\n  //logout component\n  logout: 'Выйти из аккаунта',\n  //messages page\n  journal: 'Журнал успеваемости',\n  activity: 'События',\n  checkUnreadMessages: 'Только непрочитанные',\n  loadingMore: 'Показать еще',\n  messagesNotFound: 'Сообщений не найдено',\n  //message page\n  back: 'Назад',\n  previousMessage: 'Предыдущее',\n  nextMessage: 'Следующее',\n  messages: 'Сообщения',\n  //schedule page\n  schedule: 'Расписание',\n  course: 'Курс'\n\n};\n\naddLocaleData([...en, ...ru]);\n\nconst Context = React.createContext();\n\nclass IntlProviderWrapper extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.switchToEnglish = () =>\n      this.setState({ locale: 'en', messages: enTranslation });\n\n    this.switchToRussian = () =>\n      this.setState({ locale: 'ru', messages: ruTranslation });\n\n    // pass everything in state to avoid creating object inside render method (like explained in the documentation)\n    this.state = {\n      locale: 'ru',\n      messages: ruTranslation,\n      switchToEnglish: this.switchToEnglish,\n      switchToRussian: this.switchToRussian\n    };\n  }\n\n  render() {\n    const { children } = this.props;\n    const { locale, messages } = this.state;\n    return (\n      <Context.Provider value={this.state}>\n        <IntlProvider\n          key={locale}\n          locale={locale}\n          messages={messages}\n          defaultLocale=\"ru\"\n        >\n          {children}\n        </IntlProvider>\n      </Context.Provider>\n    );\n  }\n}\n\nexport { IntlProviderWrapper, Context as IntlContext };\n","export const constants = {\n  loginOnChange: 'user/loginOnChange',\n  passwordOnChange: 'user/passwordOnChange',\n  login: 'user/login',\n  addProfile: 'user/addProfile',\n  setError: 'user/setError',\n  clearErrorMessage: 'user/clearErrorMessage',\n  loginEmployee: 'user/loginEmployee',\n  getProfile: 'user/getProfile',\n  logout: 'user/logut',\n  changeLocalisationMode: 'user/changeLocalisationMode',\n\n  getMessages: 'mail/getMessages',\n  setMessages: 'mail/setMessages',\n  changeReadMode: 'mail/changeReadMode',\n  isCleanRequared: 'mail/isCleanRequared',\n  cleanMessages: 'mail/cleanMessages',\n  setCurrentMessage: 'mail/setCurrentMessage',\n  getCurrentMessage: 'mail/getCurrentMessage',\n  updateMessage: 'mail/updateMessage',\n  setUnreadMessages: 'mail/setUnreadMessages',\n  getUnreadMessages: 'mail/getUnreadMessages'\n};\n","import {createAction} from \"redux-actions\";\nimport { constants } from \"./constants\"\n\nexport const loginOnChange = createAction(constants.loginOnChange);\nexport const passwordOnChange = createAction(constants.passwordOnChange);\nexport const login = createAction(constants.login);\nexport const loginRowguid = createAction('LOGIN_ROWGUID');\nexport const addProfile = createAction(constants.addProfile);\nexport const setError = createAction(constants.setError);\nexport const clearErrorMessage = createAction(constants.clearErrorMessage);\nexport const loginEmployee = createAction(constants.loginEmployee);\nexport const getProfile = createAction(constants.getProfile);\nexport const logout = createAction(constants.logout);\nexport const changeLocalisationMode = createAction(constants.changeLocalisationMode);\nexport const deleteLoginPassword = createAction('DELETE_LOGIN_AND_PASSWORD');\n","import { handleActions } from \"redux-actions\";\nimport { initialState } from \"../../store/user\";\nimport { loginOnChange, passwordOnChange, addProfile, setError, clearErrorMessage, changeLocalisationMode, deleteLoginPassword } from \"../../actions/authorisation\";\n\nconst authorisationReducer = handleActions({\n\n  [loginOnChange.toString()]: (state, { payload: login }) => {\n    return {...state, login};\n  },\n\n  [passwordOnChange.toString()]: (state, { payload: password }) => {\n    return {...state, password};\n  },\n\n  [deleteLoginPassword.toString()]: ( state ) => {\n    return {...state, login: '', password: ''};\n  },\n\n  [addProfile.toString()]: (state, { payload: profile }) => {\n    return {...state, profile };\n  },\n\n  [setError.toString()]: (state, { payload: errorMessage }) => {\n    return {...state, error: errorMessage};\n  },\n\n  [clearErrorMessage.toString()]: ( state ) => {\n    return {...state, error: null};\n  },\n\n  [changeLocalisationMode.toString()]: (state, { payload: bool }) => {\n    return {...state, localisationMode: bool};\n  },\n\n}, initialState);\n\nexport default authorisationReducer;\n","export const initialState = {\n  profile: null,\n  login: null,\n  password: null,\n  errorMessage: null,\n  error: false,\n  isloading: false,\n  localisationMode: true,\n};\n","import axios from 'axios';\n\nexport default axios.create({\n  // baseURL: 'http://lk.bsmu.by/',\n  baseURL: 'http://bsmu.alphabyte.pro/'\n});\n\nexport const buildUrlParams = (params) => {\n  const result = Object.keys(params).reduce((acc, key) => {\n    const param = params[key];\n    return acc + (param ? `&${key}=${param}` : '');\n  }, '');\n  return result.replace(/^&/, '');\n};\n","import DocumentIcon from '../images/doc-file.svg';\n\nexport const ROUTES = {\n  mailing: 'employee',\n  messages: 'student',\n  'mail-history': 'employee',\n  'rector-mail-history': 'employee',\n  groups: 'employee',\n  schedule: 'student'\n}\n\nexport const TYPES = {\n  'vnd.openxmlformats-officedocument.wordprocessingml.document': 'docx',\n  'msword': 'doc',\n  'vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'xlsx',\n  'vnd.ms-powerpoint': 'ppt',\n  'vnd.openxmlformats-officedocument.presentationml.presentation': 'pptx'\n}\n\nexport const ICONS = {\n  doc: DocumentIcon,\n  docx: DocumentIcon,\n  pdf: 'https://img.icons8.com/metro/52/000000/pdf-2.png',\n  jpeg: 'https://img.icons8.com/metro/52/000000/jpg.png',\n  jpg: 'https://img.icons8.com/metro/52/000000/jpg.png',\n  png: 'https://img.icons8.com/metro/52/000000/png.png',\n  xls: 'https://img.icons8.com/material-rounded/48/000000/xls.png',\n  xlsx: 'https://img.icons8.com/material-rounded/48/000000/xls.png',\n  ppt: 'https://img.icons8.com/material-rounded/48/000000/ppt.png',\n  pptx: 'https://img.icons8.com/material-rounded/48/000000/ppt.png'\n}\n\nexport const ERRORS = {\n  title: 'Заголовок сообщения превышает допустимое число символов равное 50.',\n  message: 'Вы превысили максимально допустимое число символов равное 1000.',\n  'error.file-upload.wrong-type': 'Недопустимый формат файла.',\n  'error.file-upload.size-limit': 'Размер файла превышает максимально допустимое значение равное 10 мб.'\n}\n","import { createHashHistory } from \"history\";\nexport default createHashHistory();\n","import { put } from 'redux-saga/effects';\nimport axios from '../api';\n\nimport { ROUTES } from '../constants';\nimport { getProfile } from '../actions/authorisation';\nimport { addProfile, setError, deleteLoginPassword } from '../actions/authorisation';\nimport history from \"../history\";\n\nexport function* loginRowguid({ payload: { rowguid }}) {\n  try {\n    axios.defaults.headers.common.Authorization = null;\n    const response = yield axios.post( 'api/login/student/rowguid', { rowguid });\n    localStorage.setItem('student', response.data.token);\n    yield put (getProfile({ token:response.data.token, redirect: 'login' }));\n  } catch (error) {\n    history.push('/login/student');\n  }\n}\n\nexport function* loginSaga({ payload: { pathname, login, password, localisationMode}}) {\n  try {\n    axios.defaults.headers.common.Authorization = null;\n    const response = yield axios.post( `api/login/${pathname}`, { password, login });\n    localStorage.setItem(pathname, response.data.token);\n    yield put (getProfile({ token:response.data.token, redirect: 'login' }));\n  } catch (error) {\n    if (localisationMode) {\n      yield put(setError('К сожалению, такой пользователь не найден. Проверьте правильность введенных данных и повторите попытку'));\n    } else yield put(setError('Sorry, the user is not found. Please check your input and try again'));\n  }\n}\n\nexport function* getProfileSaga({payload}) {\n  try {\n    axios.defaults.headers.common.Authorization = `Bearer ${payload.token}`;\n    const profile = yield axios.get (`api/profile`);\n    if (payload.redirect === 'login') {\n      if ( profile.data.discr === 'employee' && profile.data.is_rector) history.push('/rector-mail-history');\n      if ( profile.data.discr === 'employee' && profile.data.is_admin) history.push('/mailing');\n      if ( profile.data.discr === 'employee' && !profile.data.is_rector) history.push('/mailing');\n      if ( profile.data.discr === 'student' ) history.push('/messages');\n    } else {\n      history.push(payload.redirect);\n    }\n    yield put(addProfile(profile.data));\n  } catch (error) {\n    history.push(`/login/${ROUTES[payload.pathname]}`);\n  }\n}\n\nexport function* logout({ payload: { pathname }}) {\n  try {\n    yield axios.post( `api/logout/${ROUTES[pathname]}`);\n    localStorage.setItem(pathname, null);\n    history.push(`/login/${ROUTES[pathname]}`);\n    yield put(deleteLoginPassword());\n  } catch (error) {\n    yield put(setError('К сожалению, такой пользователь не найден. Проверьте правильность введенных данных и повторите попытку'));\n  }\n}\n","import {createAction} from \"redux-actions\";\nimport { constants } from \"../authorisation/constants\";\n\nexport const getMessages = createAction(constants.getMessages);\nexport const setMessages = createAction(constants.setMessages);\nexport const changeReadMode = createAction(constants.setMessages);\nexport const isCleanRequared = createAction (constants.isCleanRequared);\nexport const cleanMessages = createAction (constants.cleanMessages);\nexport const setCurrentMessage = createAction (constants.setCurrentMessage);\nexport const getCurrentMessage = createAction (constants.getCurrentMessage);\nexport const updateMessage = createAction(constants.updateMessage);\nexport const setUnreadMessages = createAction(constants.setUnreadMessages);\nexport const getUnreadMessages = createAction (constants.getUnreadMessages);\n\n","import { put, select } from 'redux-saga/effects' ;\nimport { setMessages, setCurrentMessage, getMessages, getUnreadMessages } from '../actions/mail';\nimport axios from '../api';\n\nimport { buildUrlParams } from '../api';\n\nexport function* messagesSaga({ payload: { next = false, faculty, employee_id}}) {\n  try {\n    const mail = yield select(state => state.mail);\n    const params = buildUrlParams({ unread: mail.unread, page: mail.currentPage, faculty, employee_id });\n    const response = yield axios.get(`api/message?${params}`);\n    yield put(setMessages({ messages: response.data, next }));\n  } catch (error) {\n\n  }\n}\n\nexport function* setUnreadMessages(payload) {\n  yield put(getUnreadMessages(payload.payload));\n  yield put(getMessages({ next: false }));\n}\n\nexport function* getCurrentMessage(payload) {\n  try {\n    const response = yield axios.get(`api/message/${payload.payload}`);\n    yield put(setCurrentMessage(response.data));\n  } catch (error) {\n\n  }\n}\n\nexport function* updateMessage(payload) {\n  try {\n    yield axios.put(`api/message/${payload.payload}`, { unread: true });\n  } catch (error) {\n  }\n}\n","import {\n    createAction\n} from \"redux-actions\";\n\nexport const fetchCourse = createAction('FETCH_COURSE');\nexport const setCourse = createAction('SET_COURSE');\nexport const fetchStudents = createAction('FETCH_STUDENTS');\nexport const fetchStudentsFaled = createAction('FETCH_STUDENTS_FALED');\nexport const setStudents = createAction('SET_STUDENTS');\nexport const clearStudents = createAction('CLEAR_STUDENTS');\nexport const sendMessage = createAction('SEND_MESSAGE');\nexport const sendMessageSuccess = createAction('SEND_MESSAGE_SUCCESS');\nexport const sendMessageFailed = createAction('SEND_MESSAGE_FAILED');\nexport const fetchGroups = createAction('FETCH_GROUPS');\nexport const setGroups = createAction('SET_GROUPS');\nexport const uploadFile = createAction('UPLOAD_FILE');\nexport const fetchFaculty = createAction('FETCH_FACULTY');\nexport const setFaculty = createAction('SET_FACULTY');\nexport const clearFaculty = createAction('CLEAR_FACULTY');\nexport const fetchEmployee = createAction('FETCH_EMPLOYEE');\nexport const setEmployee = createAction('SET_EMPLOYEE');\nexport const clearEmployee = createAction('CLEAR_EMPLOYEE');\nexport const createGroupStart = createAction('CREATE_GROUP_START');\nexport const createGroupSuccess = createAction('CREATE_GROUP_SUCCESS');\nexport const fetchFunctionalGroups = createAction('FETCH_FUNCTIONAL_GROUPS');\nexport const setFunctionalGroups = createAction('SET_FUNCTIONAL_GROUPS');\nexport const destroyFunctionalGroup = createAction('DESTROY_FUNCTIONAL_GROUP');\nexport const addStudentsToFunctionalGroup = createAction('ADD_STUDENTS_TO_FUNCTIONAL_GROUP');\nexport const updateFunctionalGroup = createAction('UPDATE_FUNCTIONAL_GROUP');\nexport const fetchSchedule = createAction('FETCH_SCHEDULE');\nexport const setSchedule = createAction('SET_SCHEDULE');\n","import {\n  put\n} from 'redux-saga/effects';\nimport download from 'downloadjs';\n\nimport { TYPES } from '../constants';\nimport {\n  setCourse,\n  setStudents,\n  setGroups,\n  setFaculty,\n  fetchStudentsFaled,\n  setFunctionalGroups,\n  fetchFunctionalGroups,\n  setEmployee,\n  sendMessageSuccess,\n  sendMessageFailed,\n  setSchedule\n} from '../actions';\nimport axios, { buildUrlParams }  from '../api';\n\nexport function* editFunctionalGroup({ payload: { id, params } }) {\n  try {\n    yield axios.put(`api/functional-group/${id}`, params);\n    yield put(fetchFunctionalGroups());\n\n  } catch (error) {\n    console.log('Error', error)\n  }\n}\n\nexport function* addStudentsToGroup({ payload: { id, params } }) {\n  try {\n    yield axios.put(`api/functional-group/${id}/students`, params);\n\n  } catch (error) {\n    console.log('Error', error)\n  }\n}\n\nexport function* deleteFunctionalGroup({ payload: { id } }) {\n  try {\n    yield axios.delete(`api/functional-group/${id}`);\n    yield put(fetchFunctionalGroups());\n\n  } catch (error) {\n    console.log('Error', error)\n  }\n}\n\nexport function* addNewGroup({ payload: { params } }) {\n  try {\n    yield axios.post('api/functional-group', params);\n    yield put(fetchFunctionalGroups());\n\n  } catch (error) {\n    console.log('Error', error)\n  }\n}\n\nexport function* fetchAllGroups() {\n  try {\n    const response = yield axios.get('api/functional-group');\n    yield put(setFunctionalGroups(response.data));\n\n  } catch (error) {\n    console.log('Error', error)\n  }\n}\n\nexport function* fetchFaculty() {\n  try {\n    const response = yield axios.get(`/api/list/faculty`);\n    yield put(setFaculty({\n      faculty: response.data\n    }));\n  } catch (error) {\n\n  }\n\n}\nexport function* fetchEmployee({ payload: { faculty } }) {\n  try {\n    const response = yield axios.get(`/api/list/employee?faculty=${faculty}`);\n    yield put(setEmployee({ employee: response.data }));\n  } catch (error) {\n\n  }\n}\n\nexport function* fetchGroups({\n  payload: {\n    course\n  }\n}) {\n  try {\n    const response = yield axios.get(`/api/list/group?${buildUrlParams({ course })}`);\n    yield put(setGroups({\n      groups: response.data\n    }));\n  } catch (error) {\n    yield put(fetchStudentsFaled())\n  }\n\n}\n\nexport function* fetchSchedule({\n  payload: {\n    language\n  }\n}) {\n  try {\n    const response = yield axios.get(`/api/schedule?${buildUrlParams({ language  })}`);\n    yield put(setSchedule({\n      schedule: response.data\n    }));\n  } catch (error) {\n\n  }\n}\n\nexport function* fetchCourse() {\n  try {\n    const response = yield axios.get('/api/list/course');\n    yield put(setCourse({\n      courses: response.data\n    }));\n  } catch (error) {\n\n  }\n}\n\nexport function* fetchStudents({\n  payload: {\n    ...filters\n  }\n}) {\n  try {\n    const response = yield axios.get(`/api/list/student?${buildUrlParams({ ...filters })}`);\n    yield put(setStudents({\n      students: response.data\n    }));\n  } catch (error) {\n\n  }\n}\n\nexport function* sendMessage({\n  payload: {\n    file,\n    title,\n    message,\n    students,\n    type,\n    value,\n    callBack,\n    error: errorCallBack\n  }\n}) {\n  const params = {\n    title,\n    message,\n    students,\n    type,\n    value\n  };\n  try {\n    if (file) {\n      const response = yield axios.post('api/message/file', file);\n      try {\n        yield axios.post('api/message', {...params, files: [response.data.id]}).then(res => {callBack()}).catch(function (error) {\n          if (error.response) {\n            errorCallBack(error.response.data);\n          } else {\n            errorCallBack({errors: []});\n          }\n        });\n        yield put(sendMessageSuccess());\n      } catch (error) {\n        yield put(sendMessageFailed());\n        if (error.response) {\n          errorCallBack(error.response.data);\n        } else {\n          errorCallBack({errors: []});\n        }\n      }\n    } else {\n        yield axios.post('api/message', params).then(res => callBack()).catch(function (error) {\n          if (error.response) {\n            errorCallBack(error.response.data);\n          } else {\n            errorCallBack({errors: []});\n          }\n        });\n        yield put(sendMessageSuccess());\n    }\n  } catch (error) {\n    yield put(sendMessageFailed());\n    if (error.response) {\n      errorCallBack(error.response.data);\n    } else {\n      errorCallBack({errors: []});\n    }\n  }\n}\n\nexport function* uploadFile(payload) {\n  try {\n    const response = yield axios.get(`api/file/${payload.payload}`, { responseType: 'blob' });\n    const type = response.data.type.split('/')[1];\n    download(response.data, `file.${TYPES[type] || type}`)\n  } catch (error) {}\n}\n","import { handleActions } from \"redux-actions\";\nimport { isEmpty } from 'lodash';\nimport { initialState } from \"../../store/mail\";\nimport { setMessages, isCleanRequared, cleanMessages, setCurrentMessage, getUnreadMessages } from \"../../actions/mail\";\nimport { sendMessage, sendMessageSuccess, sendMessageFailed } from '../../actions';\n\nconst mailReducer = handleActions({\n\n  [setMessages.toString()]: (state, { payload: { messages, next } }) => {\n    const messagesTotal = state.messages.concat(messages.items)\n    return {\n      ...state,\n      messages: next || isEmpty(state.messages) ? messagesTotal : state.messages,\n      currentPage: next || isEmpty(state.messages) ? state.currentPage + 1 : state.currentPage,\n      hasMore: messagesTotal.length < Number(messages.pager.total_count),\n    };\n  },\n  [getUnreadMessages.toString()]: (state, { payload: unread }) => {\n    return {\n      ...state,\n      unread\n    };\n  },\n\n  [isCleanRequared.toString()]: (state, { payload: bool }) => {\n    return {\n      ...state,\n      isCleanRequared: bool,\n    };\n  },\n\n  [cleanMessages.toString()]: (state, { payload }) => {\n    return {\n      ...state,\n      messages: [],\n      currentPage: 1,\n    };\n  },\n\n  [setCurrentMessage.toString()]: (state, { payload: message }) => {\n    return {\n      ...state,\n      currentMessage: message,\n    };\n  },\n  [sendMessage.toString()]: (state) => {\n    return {\n      ...state,\n      isSending: true,\n    };\n  },\n  [sendMessageSuccess.toString()]: (state) => {\n    return {\n      ...state,\n      isSending: false,\n    };\n  },\n  [sendMessageFailed.toString()]: (state) => {\n    return {\n      ...state,\n      isSending: false,\n    };\n  },\n\n}, initialState);\n\nexport default mailReducer;\n","export const initialState = {\n  messages: [],\n  currentPage: 1,\n  hasMore: false,\n  unread: false,\n  isCleanRequared: false,\n  currentMessage: [],\n  isSending: false,\n  sendError: false\n};\n","import { handleActions } from \"redux-actions\";\nimport {\n  fetchStudentsFaled,\n  setCourse,\n  setStudents,\n  setGroups,\n  setFaculty,\n  clearFaculty,\n  clearStudents,\n  fetchStudents,\n  createGroupStart,\n  createGroupSuccess,\n  fetchFunctionalGroups,\n  setFunctionalGroups,\n  clearEmployee,\n  setEmployee,\n  setSchedule\n} from \"../actions\";\n\nconst initialState = {\n  courses: [],\n  students: [],\n  groups: [],\n  faculty: [],\n  employee: [],\n  functionalGroups: {\n    items: [],\n    isFetching: false,\n    isCreating: false,\n    error: null\n  },\n  schedule: [],\n  studentsIsLoading: false,\n  localisationMode: true\n};\n\nconst main = handleActions({\n  [fetchFunctionalGroups.toString()]: (state) => {\n    return {\n      ...state,\n      functionalGroups: {\n        ...state.functionalGroups,\n        isFetching: true,\n        items: []\n      }\n    };\n  },\n  [setFunctionalGroups.toString()]: (state, { payload }) => {\n    return {\n      ...state,\n      functionalGroups: {\n        ...state.functionalGroups,\n        isFetching: false,\n        items: payload\n      }\n    };\n  },\n  [createGroupStart.toString()]: (state) => {\n    return {\n      ...state,\n      functionalGroups: {\n        ...state.functionalGroups,\n        isCreating: true\n      }\n    };\n  },\n  [createGroupSuccess.toString()]: (state) => {\n    return {\n      ...state,\n      functionalGroups: {\n        ...state.functionalGroups,\n        isCreating: false\n      }\n    };\n  },\n  [clearFaculty.toString()]: (state) => {\n    return {...state, faculty: []};\n  },\n  [clearEmployee.toString()]: (state) => {\n    return {...state, employee: []};\n  },\n  [clearStudents.toString()]: (state) => {\n    return {...state, students: [], groups: []};\n  },\n\n  [setFaculty.toString()]: (state, { payload: { faculty } }) => {\n    return {...state, faculty };\n  },\n  [setEmployee.toString()]: (state, { payload: { employee } }) => {\n    return {...state, employee};\n  },\n  [setCourse.toString()]: (state, { payload: { courses } }) => {\n    return {...state, courses};\n  },\n\n  [fetchStudents.toString()]: (state) => {\n    return {...state, studentsIsLoading: true};\n  },\n\n  [fetchStudentsFaled.toString()]: (state) => {\n    return {...state, studentsIsLoading: false};\n  },\n\n  [setStudents.toString()]: (state, { payload: { students } }) => {\n    return {...state, students, studentsIsLoading: false};\n  },\n\n  [setGroups.toString()]: (state, { payload: { groups } }) => {\n    return {...state, groups};\n  },\n\n\n  [setSchedule.toString()]: (state, {  payload: { schedule } }) => {\n    return {...state, schedule};\n  }\n\n}, initialState);\n\nexport default main;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport userReduser from './userReduser/userReduser';\nimport createSagaMiddleware from 'redux-saga';\nimport { watcherSaga } from '../sagas/watcherSaga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport mailReducer from './mailReducers/mailReducer';\nimport mainReduser from './reduser';\n\nconst rootReducer = combineReducers({\n\troot: mainReduser,\n\tuser: userReduser,\n\tmail: mailReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n\trootReducer,\n\tcomposeWithDevTools(\n\t\tapplyMiddleware(sagaMiddleware),\n\t)\n\n);\n\nsagaMiddleware.run(watcherSaga);\n\nexport default store;\n","import { takeEvery } from 'redux-saga/effects' ;\nimport { constants } from '../actions/authorisation/constants';\nimport { loginSaga, getProfileSaga, logout, loginRowguid } from './userSagas';\nimport { messagesSaga, getCurrentMessage, updateMessage, setUnreadMessages } from './mailSagas';\nimport {\n  fetchCourse,\n  fetchStudents,\n  sendMessage,\n  fetchGroups,\n  uploadFile,\n  fetchFaculty,\n  addNewGroup,\n  fetchAllGroups,\n  deleteFunctionalGroup,\n  addStudentsToGroup,\n  editFunctionalGroup,\n  fetchEmployee,\n  fetchSchedule\n} from './saga';\nimport {\n  createGroupStart,\n  fetchFunctionalGroups,\n  destroyFunctionalGroup,\n  addStudentsToFunctionalGroup,\n  updateFunctionalGroup\n} from '../actions';\n\nexport function* watcherSaga() {\n  yield takeEvery('LOGIN_ROWGUID', loginRowguid);\n  yield takeEvery(constants.logout, logout);\n  yield takeEvery(constants.login, loginSaga);\n  yield takeEvery(constants.getMessages, messagesSaga);\n  yield takeEvery(constants.getProfile, getProfileSaga);\n  yield takeEvery(constants.getCurrentMessage, getCurrentMessage);\n  yield takeEvery(constants.updateMessage, updateMessage);\n  yield takeEvery(constants.setUnreadMessages, setUnreadMessages);\n  yield takeEvery('FETCH_COURSE', fetchCourse);\n  yield takeEvery('FETCH_STUDENTS', fetchStudents);\n  yield takeEvery('SEND_MESSAGE', sendMessage);\n  yield takeEvery('FETCH_GROUPS', fetchGroups);\n  yield takeEvery('UPLOAD_FILE', uploadFile);\n  yield takeEvery('FETCH_FACULTY', fetchFaculty);\n  yield takeEvery('FETCH_EMPLOYEE', fetchEmployee);\n  yield takeEvery(createGroupStart().type, addNewGroup);\n  yield takeEvery(fetchFunctionalGroups().type, fetchAllGroups);\n  yield takeEvery(destroyFunctionalGroup().type, deleteFunctionalGroup);\n  yield takeEvery(addStudentsToFunctionalGroup().type, addStudentsToGroup);\n  yield takeEvery(updateFunctionalGroup().type, editFunctionalGroup);\n  yield takeEvery('FETCH_SCHEDULE', fetchSchedule);\n}\n","import { createSelector } from \"reselect\";\n\nconst userSelector = state => state.user;\n\nexport const loginSelector = createSelector(userSelector, (user) => user.login || '');\nexport const passwordSelector = createSelector(userSelector, (user) => user.password || '');\nexport const errorSelector = createSelector(userSelector, (user) => user.error || '');\n\nexport const firstNameSelector = createSelector(userSelector, (user) => user.profile && (user.profile.first_name || ''));\nexport const lastNameSelector = createSelector(userSelector, (user) => user.profile &&  (user.profile.last_name || ''));\nexport const groupSelector = createSelector(userSelector, (user) => user.profile &&  (user.profile.group.name || ''));\nexport const courseSelector = createSelector(userSelector, (user) => user.profile &&  (user.profile.group.course || ''));\nexport const studentFacultySelector = createSelector(userSelector, (user) => user.profile &&  (user.profile.faculty.name || ''));\nexport const localisationModeSelector = createSelector(userSelector, (user) => user.localisationMode);\n","import React from 'react';\nimport { Input } from 'antd';\nimport s from './inputComponent.module.scss'\n\nconst InputComponent = ({ label, placeholder, inputCallback, inputValue, type }) => {\n\n\tconst changeInput = (e) => inputCallback(e);\n\n\treturn (\n\t\t<div className={s.wrapper}>\n\t\t\t<span className={s.label} >\n\t\t\t\t{label}\n\t\t\t</span>\n\t\t\t{\n\t\t\t\ttype === 'password' ? \n\t\t\t\t<Input.Password placeholder = \"input password\" \n\t\t\t\t\t\t\t\t\t\t\t\tvalue = { inputValue }\n\t\t\t\t\t\t\t\t\t\t\t\tonChange = { changeInput } /> :\n\t\t\t\t<Input placeholder = { placeholder } onChange = { changeInput } value = { inputValue } />\n\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default InputComponent;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { Icon } from 'antd';\nimport { errorSelector } from '../../selectors/userSelectors';\nimport { clearErrorMessage } from '../../actions/authorisation';\nimport s from './errorMessage.module.scss';\n\nconst ErrorMessage = ({ error, clearErrorMessage }) => {\n\n  return (\n    <div className={s.wrapper}>\n      {error}\n      <div className = {s.iconContainer} onClick = { clearErrorMessage }>\n        <Icon type=\"close\" style={{color: 'gray'}} onClick = { clearErrorMessage }/>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    error: errorSelector(state),\n  }\n};\n\nconst mapDispatchToProps = {\n  clearErrorMessage\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps)\n)(ErrorMessage);\n","import React from 'react';\nimport { compose } from \"redux\";\nimport { isEmpty } from 'lodash';\nimport { withRouter } from \"react-router\";\nimport { Button, Switch } from 'antd';\nimport InputComponent from '../../components/InputComponent/InputComponent';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { IntlContext } from \"../../i18n/IntlContext\";\nimport { FormattedMessage } from \"react-intl\";\nimport s from './authorisation.module.scss'\nimport './switch.scss'\n\nconst Authorisation = ({ title, loginOnChange, passwordOnChange, login, loginText, passwordText, error, localisationMode, changeLocalisationMode, ...props }) => {\n  const { switchToEnglish, switchToRussian } = React.useContext(IntlContext);\n\n  const changeLogin = e => loginOnChange(e.currentTarget.value);\n  const changePassword = e => passwordOnChange(e.currentTarget.value);\n\n  const changeLanguage = (checked) => {\n    changeLocalisationMode(checked);\n    switch (checked) {\n      case false: switchToEnglish(); break;\n      case true: switchToRussian(); break;\n      default: switchToRussian(); break;\n    }\n  }\n\n  const loginLabel = <FormattedMessage id=\"insertLogin\" />\n  const passwordLabel = <FormattedMessage id=\"insertPassword\" />\n\n  return (\n    <div className={s.wrapper}>\n      <span className={s.title}>\n        {title}\n      </span>\n      <div className={s.content}>\n        <div className={s.loginContainer}>\n          <InputComponent label={loginLabel}\n            placeholder={'Diego Sanchez'}\n            inputCallback={changeLogin}\n            inputValue={loginText} />\n        </div>\n        <InputComponent type={'password'}\n          label={passwordLabel}\n          inputValue={passwordText}\n          inputCallback={changePassword} />\n        <div className={s.switchContainer} >\n          <span className={s.en}>En</span>\n            <Switch checked={localisationMode} onClick = { e => changeLanguage(e) }/>\n          <span className={s.ru}>Ru</span>\n        </div>\n        <div className={s.buttonsContainer}>\n          <Button disabled={isEmpty(loginText) || isEmpty(passwordText)} type=\"primary\" shape=\"round\" size='large' onClick={() => {\n            return login({ pathname: 'student', login: loginText, password: passwordText, localisationMode: localisationMode})}\n            }>\n            <span className={s.buttonText}><FormattedMessage id=\"authorisationButton\" /></span>\n          </Button>\n        </div>\n        { error && <div className = {s.errorContainer}>\n          <ErrorMessage />\n        </div>}\n      </div>\n    </div>\n  );\n};\n\nexport default compose(\n  withRouter,\n)(Authorisation);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from 'react-router';\nimport { FormattedMessage } from \"react-intl\";\nimport { loginSelector, passwordSelector, errorSelector, localisationModeSelector } from \"../selectors/userSelectors\";\nimport Authorization from '../pages/Authorization/Authorization';\nimport { loginOnChange, passwordOnChange, login, changeLocalisationMode } from \"../actions/authorisation\"\n\nclass AuthorizationStudentContainer extends React.Component {\n  render() {    \n    let title = <FormattedMessage id=\"authorisationStudentTitle\" />;\n\n    return (\n      <>\n        <Authorization  loginOnChange = {this.props.loginOnChange}\n                        passwordOnChange = {this.props.passwordOnChange}\n                        login = { this.props.login }\n                        loginText = {this.props.loginText }\n                        passwordText = {this.props.passwordText }\n                        error = { this.props.error }\n                        title = {title}\n                        changeLocalisationMode = {this.props.changeLocalisationMode}\n                        localisationMode = {this.props.localisationMode} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loginText: loginSelector(state),\n    passwordText: passwordSelector(state),\n    error: errorSelector(state),\n    localisationMode: localisationModeSelector(state), \n  }\n};\n\nconst mapDispatchToProps = {\n  loginOnChange,\n  passwordOnChange,\n  login,\n  changeLocalisationMode,\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter\n)(AuthorizationStudentContainer);\n","import React from 'react';\nimport { FormattedMessage } from \"react-intl\";\nimport LogoutImg from '../../images/logout.svg'\nimport { connect } from \"react-redux\";\nimport { logout } from '../../actions/authorisation';\nimport { withRouter } from 'react-router';\nimport s from './logout.module.scss';\n\nconst Logout = ({ logout, location: { pathname } }) => {\n  return (\n    <div className={s.logout} onClick={() => logout({ pathname: pathname.split('/')[1] })}>\n      <FormattedMessage id=\"logout\" />\n      <img className={s.icon} src={LogoutImg} alt='logout' />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  logout\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(Logout));\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { NavLink } from 'react-router-dom'\nimport Logout from '../Logout/Logout';\nimport s from './header.module.scss';\n\nconst MaillingHeader = ({ rector, location }) => {\n\tconst active = `${s.link} ${s.selected}`;\n\tconst unActive = `${s.link}`;\n\n\treturn (\n\t\t<div className={s.wrapper}>\n\t\t\t<div className={s.linksBlock}>\n\t\t\t\t{!rector && <div className={location.pathname === '/mailing' ? active : unActive}>\n\t\t\t\t\t<NavLink to=\"/mailing\">\n\t\t\t\t\t\tРассылка\n\t\t\t\t\t</NavLink>\n\t\t\t\t</div>}\n\t\t\t\t{!rector && <div className={location.pathname === '/mail-history' ? active : unActive}>\n\t\t\t\t\t<NavLink to=\"/mail-history\">\n\t\t\t\t\t\tИстория рассылок\n\t\t\t\t\t</NavLink>\n\t\t\t\t</div>}\n\t\t\t\t{!rector && <div className={location.pathname === '/groups' ? active : unActive}>\n\t\t\t\t\t<NavLink to=\"/groups\">\n\t\t\t\t\t\tФункциональные группы\n\t\t\t\t\t</NavLink>\n\t\t\t\t</div>}\n\t\t\t</div>\n\t\t\t<Logout />\n\t\t</div>\n\t);\n};\n\nexport default withRouter (MaillingHeader);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { ROUTES } from '../constants';\nimport history from \"../history\";\n\nexport const authorisationHoc = (Component) => {\n\n  class RedirectComponent extends React.Component {\n    componentDidMount() {\n      const key = this.props.location.pathname.split('/')[1];\n      if (!localStorage.getItem(ROUTES[key])) {\n        (this.props.location.pathname === '/rector-mail-history' || this.props.location.pathname === '/mail-history' || this.props.location.pathname === '/mailing' || this.props.location.pathname === '/groups') && history.push('/login/employee');\n        (this.props.location.pathname === '/messages' || this.props.location.pathname === '/schedule') && history.push('/login/student');\n      }\n    }\n\n    render() {\n      return <Component {...this.props} />\n    }\n  }\n\n  return withRouter(RedirectComponent);\n};\n","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport { Button, Icon } from 'antd';\nimport { get, isEmpty, last } from 'lodash';\nimport { withRouter } from 'react-router';\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { ICONS } from '../../constants';\nimport { authorisationHoc } from '../../hoc/authorusationHoc';\nimport { uploadFile } from '../../actions';\nimport s from './messagesTable.module.scss';\n\nclass MessagesTable extends React.Component {\n\tstate = {\n\t\topen: [],\n\t}\n\n\tdestination = (type, value, students) => {\n\t\tif (type === 'course') {\n\t\t\treturn `Курс №${value}`;\n\t\t} else if (type === 'group' && value.split(',').length > 1) {\n\t\t\treturn value.split(',').map(v => <>Группа №{v}<br/></>);\n\t\t} else if (type === 'group' && isEmpty(value)) {\n\t\t\treturn students.map(student => <>{student.student.last_name} {student.student.first_name} {student.student.mid_name} {student.is_read && ' -  Прочитано'}<br/></>)\n\t\t} else if (type === 'group' && !isEmpty(value)) {\n\t\t\treturn value\n\t\t} else if (type === 'all') {\n\t\t\treturn 'Все студенты'\n\t\t}\n\t}\n\n\tdisplayMessage = (text, id) => {\n\t\tconst { open } = this.state;\n\t\tif (text.length > 500 && !open.includes(id)) {\n\t\t\treturn <div>\n\t\t\t\t{text.substr(0, 500)}\n\t\t\t\t<div className={s.close} onClick={() => this.setState(state => ({ open: state.open.concat(id) }))}>...</div>\n\t\t\t</div>\n\t\t} else {\n\t\t\treturn text;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { messages, hasMore, getMessages, faculty, is_admin, employee_id } = this.props;\n\t\treturn (\n\t\t\t<div className={s.table}>\n\t\t\t\t<div className={s.wrapper}>\n\t\t\t\t\t<div className={s.head}>\n\t\t\t\t\t\t<div className={s.firstBlock}>\n\t\t\t\t\t\t\tТекст рассылки\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={s.secondBlock}>\n\t\t\t\t\t\t\tДата\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={s.thirdBlock}>\n\t\t\t\t\t\t\tПолучатели\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{is_admin && <div className={s.thirdBlock}>\n\t\t\t\t\t\t\tФакультет\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t<div className={s.fourthBlock}>\n\t\t\t\t\t\t\tАвтор рассылки\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\tmessages && messages.map(message => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div key = { message.id } className={s.message}>\n\t\t\t\t\t\t\t\t<div className={s.firstBlock}>\n\t\t\t\t\t\t\t\t\t<div className={s.messageTitle}>\n\t\t\t\t\t\t\t\t\t\t{ message.title }\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className = {s.text}>\n\t\t\t\t\t\t\t\t\t\t{this.displayMessage(message.message, message.id) }\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={s.secondBlock}>\n\t\t\t\t\t\t\t\t\t{moment(message.created_at).format('DD MMMM YYYY')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={s.thirdBlock}>\n\t\t\t\t\t\t\t\t\t{this.destination(message.message_type, message.message_type_value, message.students)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{is_admin && <div className={s.thirdBlock}>\n\t\t\t\t\t\t\t\t\t{message.message_type === 'all' ? 'весь БГМУ' : message.message_type_value }\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t\t<div className={s.fourthBlock}>\n\t\t\t\t\t\t\t\t{`${message.employee.full_name}`}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{!isEmpty(get(message, 'files', [])) && <div className={s.fileWrapper}>\n\t\t\t\t\t\t<div className={s.file} onClick={() => this.props.uploadFile(get(message, 'files')[0].id)}>\n              <img className={s.document} alt='doc' src={ICONS[last(get(message, 'files')[0].file_name.split('.'))]} />\n              <span>{get(message, 'files')[0].file_name}</span>\n            </div>\n            <span>\n              <Icon type=\"close\" style={{ color: 'gray' }} />\n            </span>\n          </div>}\n\t\t\t\t\t\t\t<div className={s.border}></div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) )\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className = { s.loadMore }>{!isEmpty(messages) && hasMore && <Button  onClick = {() => getMessages({next: true, faculty, employee_id}) } ><FormattedMessage id=\"loadingMore\" /></Button> }</div>\n\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nexport default compose(\n  withRouter,\n  connect(null, { uploadFile })\n)(authorisationHoc(MessagesTable));\n","import { createSelector } from \"reselect\";\n\nconst mailSelector = state => state.mail;\n\nexport const messagesSelector = createSelector(mailSelector, (mail) => mail.messages || []);\nexport const hasMoreSelector = createSelector(mailSelector, (mail) => mail.hasMore );\nexport const currentMessageSelector = createSelector(mailSelector, (mail) => mail.currentMessage.message );\nexport const actionMessageSelector = createSelector(mailSelector, (mail) => mail.currentMessage );\nexport const isUnreadMessages = createSelector(mailSelector, (mail) => mail.unread);\n","import { createSelector } from \"reselect\";\n\nconst rootSelector = state => state.root;\n\nexport const coursesSelector = createSelector(rootSelector, root => root.courses || []);\nexport const studentsSelector = createSelector(rootSelector, root => root.students || []);\nexport const studentsIsLoading = createSelector(rootSelector, root => root.studentsIsLoading);\nexport const groupsSelector = createSelector(rootSelector, root => root.groups || []);\nexport const facultySelector = createSelector(rootSelector, root => root.faculty || []);\nexport const employeeSelector = createSelector(rootSelector, root => root.employee || []);\nexport const functionalGroupsSelector = createSelector(rootSelector, root => root.functionalGroups.items || []);\nexport const scheduleSelector = createSelector(rootSelector, root => root.schedule || []);\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { isEqual, get, isEmpty } from \"lodash\";\nimport { Select } from \"antd\";\n\nimport { ROUTES } from \"../../../constants\";\nimport {\n  fetchFaculty,\n  clearFaculty,\n  fetchEmployee,\n  clearEmployee\n} from \"../../../actions\";\nimport Header from \"../../../components/Headers/MaillingHeader\";\nimport MessagesTable from \"../../../components/MessagesTable/MessagesTable\";\nimport {\n  messagesSelector,\n  hasMoreSelector\n} from \"../../../selectors/mailSelectors\";\nimport { facultySelector, employeeSelector } from \"../../../selectors\";\nimport { getMessages, cleanMessages } from \"../../../actions/mail\";\nimport { getProfile } from \"../../../actions/authorisation\";\nimport { authorisationHoc } from \"../../../hoc/authorusationHoc\";\nimport s from \"./historyMail.module.scss\";\n\nclass HistoryMail extends React.Component {\n  state = {\n    faculty: undefined,\n    employee: undefined,\n    checkbox: false\n  };\n\n  componentWillUnmount() {\n    this.props.clearFaculty();\n    this.props.clearEmployee();\n    this.props.cleanMessages();\n  }\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.props.cleanMessages();\n      this.props.clearFaculty();\n      !this.props.user.is_rector && this.props.getMessages({ next: false });\n      this.props.fetchFaculty();\n    } else {\n      const key = this.props.location.pathname.split(\"/\")[1];\n      this.props.getProfile({\n        token: localStorage.getItem(ROUTES[key]),\n        pathname: key,\n        redirect: this.props.location.pathname\n      });\n    }\n  }\n\n  componentWillReceiveProps({ user, faculty, employee }) {\n    if (!isEqual(user, this.props.user) && user) {\n      this.props.cleanMessages();\n      !user.is_rector && this.props.getMessages({ next: false });\n      this.props.fetchFaculty();\n    }\n\n    if (!isEqual(faculty, this.props.faculty) && !isEmpty(faculty) && user) {\n      this.props.cleanMessages();\n      this.props.getMessages({ next: false, faculty: faculty[0].id });\n      this.props.fetchEmployee({ faculty: faculty[0].id });\n      this.setState({ faculty: faculty[0].id });\n    }\n  }\n\n  onChange = faculty => {\n    this.props.cleanMessages();\n    this.props.getMessages({ next: false, faculty });\n    this.props.fetchEmployee({ faculty: faculty });\n    this.setState({ faculty, employee: undefined });\n  };\n\n  onChangeEmployee = employee => {\n    this.props.cleanMessages();\n    this.props.getMessages({\n      next: false,\n      employee_id: employee,\n      faculty: this.state.faculty\n    });\n    this.setState({ employee, checkbox: false });\n  };\n\n  onChangeChbox = () => {\n    this.props.cleanMessages();\n    this.setState((state) => ({ checkbox: !state.checkbox, employee: undefined }), () => {\n      if (this.state.checkbox) {\n        this.props.getMessages({\n          next: false,\n          employee_id: this.props.user.id,\n          faculty: this.state.faculty\n        });\n      } else {\n        this.props.getMessages({\n          next: false,\n          faculty: this.state.faculty\n        });\n      }\n    });\n  };\n\n  render() {\n    const { user, faculty, employee } = this.props;\n    const employee_id = this.state.checkbox ? user.id : this.state.employee;\n    const { Option } = Select;\n    const displayOptions = faculty.map(o => (\n      <Option key={o} value={o.id}>\n        {o.name}\n      </Option>\n    ));\n    const displayOptionsEmployee = employee.map(d => (\n      <Option key={d.id} value={d.id}>\n        {d.full_name}\n      </Option>\n    ));\n\n    return (\n      <div className={s.wrapper}>\n        <div className={s.content}>\n          {user && <Header rector={get(user, \"is_rector\")} />}\n          <div className={s.subTitle}>{get(user, \"faculty.name\")}</div>\n          <div className={s.title}>История рассылок</div>\n          <div>\n            {(get(user, \"is_rector\") || get(user, \"is_admin\")) && (\n              <div className={s.select}>\n                <Select\n                  className={s.select}\n                  placeholder=\"Выберите факультет\"\n                  optionFilterProp=\"children\"\n                  onChange={this.onChange}\n                  value={this.state.faculty}\n                >\n                  {displayOptions}\n                </Select>\n              </div>\n            )}\n\n            {!get(user, \"is_admin\") && (\n              <div className={s.select}>\n                <Select\n                  className={s.select}\n                  placeholder=\"Выберите сотрудника факультета\"\n                  optionFilterProp=\"children\"\n                  value={this.state.employee}\n                  onChange={this.onChangeEmployee}\n                >\n                  {displayOptionsEmployee}\n                </Select>\n              </div>\n            )}\n\n            {(!get(user, \"is_rector\") && !get(user, \"is_admin\")) && (\n              <div className={s.checkbox}>\n                <div className={s.checkboxWrapper}>\n                  <input type=\"checkbox\" onClick={this.onChangeChbox} checked={this.state.checkbox} />\n                  <span className={s.text}>Только мои рассылки</span>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <MessagesTable\n            faculty={this.state.faculty}\n            employee_id={employee_id}\n            messages={this.props.messages}\n            hasMore={this.props.hasMore}\n            getMessages={this.props.getMessages}\n            is_admin={get(user, \"is_admin\")}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.profile,\n    messages: messagesSelector(state),\n    hasMore: hasMoreSelector(state),\n    faculty: facultySelector(state),\n    employee: employeeSelector(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  getMessages,\n  getProfile,\n  fetchFaculty,\n  cleanMessages,\n  clearFaculty,\n  fetchEmployee,\n  clearEmployee\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(authorisationHoc(HistoryMail));\n","import React from 'react';\nimport { Checkbox } from 'antd';\nimport \"antd/dist/antd.css\";\nimport './checkBoxComponent.scss'\n\nconst CheckBoxComponent = ({ text, callback, checked }) => {\n  function onChange(e) {\n    callback(e.target.checked);\n  }\n  return (\n    <div className='checkBoxComponent'>\n      <Checkbox checked={checked} onChange={onChange}>{text}</Checkbox>\n    </div>\n  );\n};\n\nexport default CheckBoxComponent;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Button } from 'antd';\nimport moment from 'moment';\nimport { isEmpty } from 'lodash';\nimport { FormattedMessage } from \"react-intl\";\nimport 'moment/locale/ru';\n\nimport { messagesSelector } from '../../selectors/mailSelectors';\nimport { localisationModeSelector } from '../../selectors/userSelectors';\nimport history from '../../history';\nimport s from './messagesList.module.scss';\n\nconst MessagesList = ({ messages, getMessages, hasMore, localisationMode }) => {\n  localisationMode ? moment.locale('ru') : moment.locale('en');\n  const unreadMessage = `${s.message} ${s.unreadMessage}`;\n  return (\n    <div className={s.messagesList}>\n      {\n        messages.length === 0 && <div className = {s.messagesNotFoundWrapper}>\n          <div className = {s.messagesNotFound}>\n            <FormattedMessage id=\"messagesNotFound\" />\n          </div>\n        </div>\n      }\n      {\n        messages && messages.map(message => (\n          <div className={ message.students[0].is_read ? s.message : unreadMessage } key = {message.id} onClick = { () => history.push(`/messages/${message.id}`) }>\n            <div className={s.messageHeader}>\n              <div className={s.title}>{message.title}</div>\n              <div className={s.date}>{moment(message.created_at).format('DD MMMM YYYY')}</div>\n            </div>\n            <div className={s.messageText}>\n              {message.message}\n            </div>\n          </div>\n        ))\n      }\n      { !isEmpty(messages) && hasMore && <Button className = { s.loadMore } onClick = {() => getMessages({ next: true }) } ><FormattedMessage id=\"loadingMore\" /></Button> }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n\treturn {\n    localisationMode: localisationModeSelector(state),\n\t\tmessages: messagesSelector(state),\n\t}\n};\n\nexport default connect(mapStateToProps, null)(MessagesList);\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport Logout from \"../Logout/Logout\";\nimport s from \"./header.module.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst MessagesHeader = ({ location, rector, linkToJournal, headWrapper = s.wrapper }) => {\n  const active = `${s.link} ${s.selected}`;\n  const unActive = `${s.link}`;\n\n  return (\n    <div className={headWrapper}>\n      <div className={s.linksBlock}>\n        {!rector && (\n          <div className={location.pathname === \"/messages\" ? active : unActive}>\n            <NavLink to={\"/messages\"}>\n              <FormattedMessage id=\"messages\" />\n            </NavLink>\n          </div>\n        )}\n\n        <div className={unActive}>\n          <a href={linkToJournal}>\n            <FormattedMessage id=\"journal\" />\n          </a>\n        </div>\n        <div className={unActive}>\n          <a href='https://www.bsmu.by/activity/#current'>\n            <FormattedMessage id=\"activity\" />\n          </a>\n        </div>\n\n        {!rector && (\n          <div className={location.pathname === \"/schedule\" ? active : unActive}>\n            <NavLink to={\"/schedule\"} activeClassName=\"active\">\n              <FormattedMessage id=\"schedule\" />\n            </NavLink>\n          </div>\n        )}\n\n        <div className={active}></div>\n      </div>\n      <Logout />\n    </div>\n  );\n};\n\nexport default withRouter(MessagesHeader);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { FormattedMessage } from 'react-intl';\nimport { withRouter } from 'react-router';\nimport { isEqual } from 'lodash';\nimport qs from 'qs';\n\nimport history from '../../history';\nimport { ROUTES } from '../../constants';\nimport axios from '../../api';\nimport CheckBoxComponent from '../../components/CheckBoxComponent/CheckBoxComponent';\nimport { getProfile, loginRowguid } from '../../actions/authorisation';\nimport {\n  getMessages,\n  isCleanRequared,\n  cleanMessages,\n  getCurrentMessage,\n  setUnreadMessages\n} from '../../actions/mail';\nimport {\n  firstNameSelector,\n  lastNameSelector,\n  groupSelector\n} from '../../selectors/userSelectors';\nimport {\n  hasMoreSelector,\n  currentMessageSelector,\n  isUnreadMessages\n} from '../../selectors/mailSelectors';\nimport List from '../../components/MessagesList/MessagesList';\nimport s from './messages.module.scss';\nimport headerStyles from '../../components/Headers/header.module.scss'\nimport Header from '../../components/Headers/MessagesHeader';\n\nclass Messages extends React.Component {\n  state = {\n    linkToJournal: ''\n  };\n\n  componentDidMount() {\n    const {\n      location: { pathname, search }\n    } = this.props;\n    const queryParams = qs.parse(search.replace('?', ''));\n\n    if (this.props.user) {\n      this.props.cleanMessages();\n      this.props.getMessages({ next: false });\n    } else {\n      const key = pathname.split('/')[1];\n      if (!localStorage.getItem(ROUTES[key]) && !queryParams.usr) {\n        (pathname === '/rector-mail-history' ||\n          pathname === '/mail-history' ||\n          pathname === '/mailing') &&\n          history.push('/login/employee');\n        pathname === '/messages' && history.push('/login/student');\n      } else {\n        if (queryParams.usr) {\n          this.props.loginRowguid({ rowguid: queryParams.usr });\n        } else {\n          this.props.getProfile({\n            token: localStorage.getItem(ROUTES[key]),\n            pathname: key,\n            redirect: pathname\n          });\n        }\n      }\n    }\n  }\n\n  getLink = () => {\n   axios.get(`/api/journal`).then((response) => {\n      this.setState({ linkToJournal: response.data.url });\n    });\n  };\n\n  componentWillReceiveProps({ user }) {\n    if (!isEqual(user, this.props.user) && user) {\n      this.props.getMessages({ next: false });\n      this.getLink();\n    }\n  }\n\n  getUnread = (bool) => {\n    this.props.cleanMessages();\n    this.props.setUnreadMessages(bool);\n  };\n\n  render() {\n    const checkboxText = <FormattedMessage id=\"checkUnreadMessages\" />;\n    return (\n      <div className={s.wrapper}>\n        <div className={s.content}>\n          <Header linkToJournal={this.state.linkToJournal} headWrapper={headerStyles.wrapper2} />\n          <div className={s.head}>\n            <div className={s.title}>\n              {`${this.props.lastName || ''} ${this.props.firstName ||\n                ''}, ${this.props.group || ''}`}\n              <div className={s.checkboxWrapper}>\n                <CheckBoxComponent\n                  checked={this.props.isUnreadMessages}\n                  callback={this.getUnread.bind(this)}\n                  text={checkboxText}\n                />\n              </div>\n            </div>\n          </div>\n          <div className={s.messagesList}>\n            <List\n              hasMore={this.props.hasMore}\n              getMessages={this.props.getMessages}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.profile,\n    firstName: firstNameSelector(state),\n    lastName: lastNameSelector(state),\n    group: groupSelector(state),\n    hasMore: hasMoreSelector(state),\n    currentMessage: currentMessageSelector(state),\n    isUnreadMessages: isUnreadMessages(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  getMessages,\n  getProfile,\n  isCleanRequared,\n  cleanMessages,\n  getCurrentMessage,\n  setUnreadMessages,\n  loginRowguid\n};\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Messages);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Button, Icon } from 'antd';\nimport { get, isEmpty, isEqual, last } from 'lodash';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport Moment from 'moment';\nimport { FormattedMessage } from \"react-intl\";\nimport { compose } from \"redux\";\nimport history from '../../history';\n\nimport { ROUTES, ICONS } from '../../constants';\nimport { getCurrentMessage, updateMessage } from '../../actions/mail';\nimport { uploadFile } from '../../actions';\nimport { getProfile } from '../../actions/authorisation';\nimport { currentMessageSelector, actionMessageSelector, messagesSelector } from '../../selectors/mailSelectors';\nimport s from './message.module.scss';\nimport './message.scss';\n\nclass Message extends React.Component {\n  componentDidMount() {\n    if (this.props.user) {\n\t\t\tthis.props.getCurrentMessage(this.props.match.params.id);\n      this.props.updateMessage(this.props.match.params.id);\n\t\t} else {\n\t\t\tconst key = this.props.location.pathname.split('/')[1];\n      if (!localStorage.getItem(ROUTES[key])) {\n        (this.props.location.pathname === '/rector-mail-history' || this.props.location.pathname === '/mail-history' || this.props.location.pathname === '/mailing') && history.push('/login/employee');\n        this.props.location.pathname === '/messages' && history.push('/login/student');\n      } else {\n\t\t\t\tthis.props.getProfile({ token: localStorage.getItem(ROUTES[key]), pathname: key, redirect: this.props.location.pathname });\n\t\t\t}\n\t\t}\n  }\n\n  componentWillReceiveProps({ user, match }) {\n\t\tif (!isEqual(user, this.props.user) && user) {\n\t\t\tthis.props.getCurrentMessage(this.props.match.params.id);\n      this.props.updateMessage(this.props.match.params.id);\n    }\n    if (!isEqual(match.params.id && this.props.match.params.id)) {\n      this.props.updateMessage(match.params.id);\n    }\n\t}\n\n  render () {\n    const { currentMessage, action, uploadFile } = this.props;\n    return (\n      <div className={s.wrapper}>\n        <div className={s.content}>\n          <div className={s.link}><NavLink to=\"/messages\"><Icon type=\"left\" style={{ color: '#1890ff' }} /><FormattedMessage id=\"back\" /></NavLink></div>\n          <div className={s.title}>\n            { get(currentMessage,'title', '') }\n          </div>\n          <div className={s.date}>\n          { Moment(get(currentMessage,'created_at', '')).format('DD MMMM YYYY') }\n            </div>\n          <div className={s.message}>\n          { get(currentMessage, 'message', '') }\n          </div>\n          {!isEmpty(get(currentMessage, 'files', [])) && <div className={s.fileWrapper}>\n            <div className={s.file} onClick={() => uploadFile(get(currentMessage, 'files')[0].id)}>\n              <img className={s.document} alt='doc' src={ICONS[last(get(currentMessage, 'files')[0].file_name.split('.'))]} />\n              <span>{get(currentMessage, 'files')[0].file_name}</span>\n            </div>\n            <span>\n              <Icon type=\"close\" style={{ color: 'gray' }} />\n            </span>\n          </div>}\n          <div className={`${s.buttonsContainer} ${'messageButtonsContainer'}`}>\n            <div>\n              {get(action, 'prev') && <Button onClick={() => {\n                this.props.getCurrentMessage(get(action, 'prev'));\n                this.props.currentMessage && history.push(`/messages/${get(action, 'prev')}`)\n                }} type=\"primary\" shape=\"round\" size='large' style={{ width: '175px' }}>\n                <Icon type=\"arrow-left\" />\n                <FormattedMessage id=\"previousMessage\" />\n              </Button>}\n            </div>\n            <div>\n              {get(action, 'next') && <Button onClick={() => {\n                this.props.getCurrentMessage(get(action, 'next'))\n                this.props.currentMessage && history.push(`/messages/${get(action, 'next')}`)\n                }} type=\"primary\" shape=\"round\" size='large' style={{ width: '175px' }}>\n              <FormattedMessage id=\"nextMessage\" />\n                <Icon type=\"arrow-right\" />\n              </Button>}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.profile,\n    currentMessage: currentMessageSelector(state),\n    action: actionMessageSelector(state),\n    messages: messagesSelector(state),\n  }\n};\n\nconst mapDispatchToProps = {\n  getCurrentMessage,\n  updateMessage,\n  uploadFile,\n  getProfile\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Message);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Icon, Modal, Button, Form, Select } from 'antd';\nimport { studentsSelector } from '../../selectors';\n// import { get } from 'lodash';\n\nimport { addStudentsToFunctionalGroup } from '../../actions';\nimport s from './index.module.scss';\n\nclass AddStudentsToGroup extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      this.props.addStudentsToFunctionalGroup({ id: this.props.functionalGroup, params: { students: this.props.checkedStudents } });\n      this.props.onCancel();\n    });\n  }\n\n  render() {\n    const { form: { getFieldDecorator }, displayGroupsOptions, checkedStudents, students } = this.props;\n    const displayStudents = students.filter(student => checkedStudents.includes(student.id));\n    return (\n      <Modal\n        centered\n        visible={this.props.showModal}\n        onCancel={this.props.onCancel}\n        closeIcon={<Icon type=\"close-circle\" style={{ fontSize: '20px' }}/>}\n        footer={null}\n        width={700}\n      >\n        <div className={s.modalContent}>\n          <div className={s.modalTitle}>\n            Добавление студента в функциональную группу\n          </div>\n          <div className={s.modalForm}>\n            <Form onSubmit={this.handleSubmit}>\n              <div className={s.modalFormLabel}>\n                Выбранная функциональная группа\n              </div>\n              {getFieldDecorator('group_id', {\n              })(\n                <div className='selectContainer'>\n                  <Select\n                    style={{ width: '100%' }}\n                    placeholder=\"Название функциональной группы\"\n                    optionFilterProp=\"children\"\n                    onChange={this.props.handleChangeGroup}\n                    value={this.props.functionalGroup}\n                  >\n                    {displayGroupsOptions}\n                  </Select>\n                </div>\n              )}\n              <div className={s.modalFormLabel}>\n                Выбранные студенты\n              </div>\n              <div className={s.sudentsContent}>\n                {displayStudents.map((student, index) =>\n                  <div className={s.sudentsWrapper}>\n                    <label>\n                      <span>{`${index + 1}. ${student.last_name} ${student.first_name} ${student.mid_name}`}</span>\n                    </label>\n                  </div>\n                )}\n              </div>\n              <div className={s.buttonContainer}>\n                <div className='buttonWrapper'>\n                  <Button type=\"primary\" shape=\"round\" size='large' htmlType=\"submit\">\n                    Добавить\n                  </Button>\n                </div>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  addStudentsToFunctionalGroup\n};\n\nconst mapStateToProps = state => ({\n  students: studentsSelector(state),\n});\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)((Form.create()(AddStudentsToGroup)));\n","import React from 'react';\nimport { Select } from 'antd';\nimport { connect } from \"react-redux\";\n\nimport { fetchGroups, clearStudents } from '../../actions';\nimport { coursesSelector } from '../../selectors';\n\nconst SelectComponent = ({ options, fetchStudents, fetchGroups, value, handleClear, clearStudents }) => {\n  function onChange(course) {\n    if (course) {\n      fetchStudents(course, 'course');\n      fetchGroups({ course })\n    } else {\n        clearStudents();\n        handleClear();\n    }\n  }\n\n  const { Option } = Select;\n  const displayOptions = options.map(o => <Option key={o} value={o}>{o} курс</Option> );\n  return (\n    <Select\n    style={{ width: '100%' }}\n    placeholder=\"Выберите курс\"\n    optionFilterProp=\"children\"\n    onChange={onChange}\n    value={value}\n    allowClear = 'true'\n  >\n    {displayOptions}\n  </Select>\n  );\n};\n\nconst mapStateToProps = state => ({\n  options: coursesSelector(state)\n});\n\nexport default connect(mapStateToProps, { fetchGroups, clearStudents })(SelectComponent);\n","import React from 'react';\nimport s from './roundCheckbox.module.scss'\n\nconst RoundCheckbox = ({id, number, addGroup}) => {\n  const stringNumber = String(number)\n  return (\n    <div className={s.container}>\n      <div className={s.round}>\n        <input type=\"checkbox\" id={id} \n          onClick={(e) => {\n          addGroup(stringNumber, e.currentTarget.checked)}}/>\n        <label htmlFor={id} >{number}</label>\n      </div>\n    </div>\n  );\n};\n\nexport default RoundCheckbox;\n","import React from 'react';\nimport { connect } from \"react-redux\";\n\nimport { groupsSelector } from '../../selectors';\nimport RoundCheckbox from '../RoundCheckbox/RoundCheckbox';\nimport s from './groupsList.module.scss';\nimport './groupsList.scss';\n\nconst GroupsList = ({ groups, fetchStudents, currentCroup, course = null, addGroup }) => {\n  return (\n    course && <>\n      <div className={s.text}>выберите № группы</div>\n      <div className = {s.groupsContainer}>\n        <div className = {s.groupsBlock}>\n          {groups.map(group =>\n            <div key={group.id} className=\"group\" >\n              <RoundCheckbox id={group.id} number={group.name} addGroup = {addGroup}/>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  groups: groupsSelector(state)\n});\n\nexport default connect(mapStateToProps, null)(GroupsList);\n","import React from 'react';\nimport { Button, Input, Alert, Icon, Modal } from 'antd';\nimport { connect } from \"react-redux\";\nimport { isEmpty, isNumber } from 'lodash';\n\nimport { ERRORS } from '../../constants';\nimport Attachment from '../../images/attachment.svg';\nimport s from './sendForm.module.scss';\nimport { sendMessage } from '../../actions';\nimport { facultySelector } from '../../selectors';\nimport './sendForm.scss';\n\nconst File =  React.createRef();\n\nclass SendForm extends React.Component {\n  state = {\n    title: '',\n    message: '',\n    path: '',\n    alert: false,\n    error: [],\n  }\n\n  componentDidMount() {\n    const inputFiles = document.getElementById('input-file');\n    inputFiles.addEventListener('change', (e) => {\n      this.setState({ path: e.target.value.split(/\\\\/)[2] });\n    });\n  }\n\n  callBack = () => Modal.success({\n    content: 'Ваше сообщение отправлено успешно!',\n  });\n\n  error = (data) => Modal.error({\n    content: data.errors.map(e => <>{ERRORS[e.property || e] || 'Ошибка отправки сообщения'}<br/></>),\n  });\n\n  handleChange = (e, type) => this.setState({ [type]: e.currentTarget.value });\n\n  typeValue = () => {\n    const { filters, functionalGroups, faculties } = this.props;\n\n    if (filters.allStudents && filters.allChecked) {\n      return {type: 'all', value: 'весь БГМУ'}\n    } else {\n      if (\n        !filters.allChecked || (filters.name || filters.is_captain || (filters.group.length < 2 && !isEmpty(filters.group)))\n      ) {\n        return {type: 'group', value: ''}\n      } else if (isNumber(filters.functionalGroup)) {\n        const name = functionalGroups.find(g => g.id === filters.functionalGroup).title\n        return {type: 'group', value: name}\n      } else if (!isEmpty(filters.group)) {\n        return {type: 'group', value: filters.group.join(',')}\n      } else if (filters.course) {\n        return {type: 'course', value: String(filters.course)}\n      } else if (isNumber(filters.faculty)) {\n        const name = faculties.find(g => g.id === filters.faculty).name\n        return {type: 'group', value: name}\n      }\n    }\n  }\n\n  handleUpload = () => {\n    const { checkedStudents: students } = this.props;\n    const { title, message } = this.state;\n    const file = document.getElementById('input-file').files[0];\n    const types = this.typeValue();\n    const params = { ...types, title, message, students, callBack: this.callBack, error: this.error };\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', document.getElementById('input-file').files[0]);\n      this.props.sendMessage({ ...params, file: formData });\n    } else {\n      this.props.sendMessage({ ...params });\n    }\n  }\n\n  success = () => Modal.success({\n    content: 'Ваше сообщение отправлено успешно!',\n  });\n\n  render() {\n    const { title, message, path, alert, error } = this.state;\n    const errorMessages = error.map(e => <>{ERRORS[e.property || e]}<br/></>);\n    return (\n      <div className={s.wrapper}>\n        <form>\n          <div className='sendForm__inputContainer'>\n            <Input value={this.state.title} onChange={(e) => this.handleChange(e, 'title')} placeholder='тема сообшения' />\n          </div>\n          <div className='sendForm__textareaContainer'>\n            <input ref={File} className={s.file} type=\"file\" id=\"input-file\"/>\n            <img className={s.icon} src={Attachment} alt='add file' onClick={() => File.current.click()} />\n            <Input.TextArea value={this.state.message} onChange={(e) => this.handleChange(e, 'message')} placeholder=\"Текст сообщения\" rows={8} ></Input.TextArea>\n            {path && <div className={s.path}>{path}<Icon onClick={() => {\n              File.current.value = '';\n              this.setState({path: ''})}} type=\"close\" style={{ color: 'gray' }} /></div>}\n          </div>\n          <div className={s.buttonContainer}>\n            <div className='buttonWrapper'>\n              <Button\n                disabled={isEmpty(title) || (isEmpty(message) && isEmpty(path)) || isEmpty(this.props.checkedStudents) || this.props.isLoading}\n                onClick={() => this.handleUpload()}\n                placeholder=\"Текст сообщения\"\n                type=\"primary\"\n                shape=\"round\"\n                size='large'\n                loading={this.props.isLoading}\n              >\n                отправить\n              </Button>\n            </div>\n          </div>\n          {alert && <Alert\n            style = {{position: 'absolute', width: '250px', zIndex: '999'}}\n            message=\"Сообщения успешно отправлены выбранным студентам\"\n            type=\"success\"\n            closable\n            onClose={() => this.setState({ alert: false })}\n          />}\n          {!isEmpty(error) && <Alert\n            style = {{position: 'absolute', width: '250px', zIndex: '999'}}\n            message={errorMessages}\n            type=\"error\"\n            closable\n            onClose={() => this.setState({ error: [] })}\n          />}\n        </form>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    faculties: facultySelector(state),\n    isLoading: state.mail.isSending,\n    functionalGroups: state.root.functionalGroups.items\n  };\n};\n\nexport default connect(mapStateToProps, { sendMessage })(SendForm);\n","import React from 'react';\nimport { Input, Select, Icon } from 'antd';\nimport { connect } from \"react-redux\";\nimport { get, isEmpty } from 'lodash';\n\nimport AddStudentsToGroup from \"../../pages/Groups/AddStudentsToGroup\";\nimport { fetchStudents, clearStudents } from '../../actions';\nimport { facultySelector } from '../../selectors';\nimport SelectComponent from '../SelectComponent/SelectComponent';\nimport CheckBoxComponent from '../CheckBoxComponent/CheckBoxComponent';\nimport GroupsList from '../GroupsList/GroupsList';\nimport SendForm from '../SendForm/SendForm';\nimport s from './mailingBlock.module.scss';\nimport './mailingBlock.scss';\n\nconst Search = Input.Search;\nconst { Option } = Select;\n\nclass MailingBlock extends React.Component {\n  state = {\n    name: '',\n    course: undefined,\n    faculty: undefined,\n    group: [],\n    is_captain: false,\n    allStudents: false,\n    showModal: false,\n    functionalGroup: undefined\n  }\n\n  componentDidMount() {\n    this.props.clearStudents();\n  }\n\n  clearCours = () => {\n    this.setState({ course: undefined, group: [] }, () => this.handleFilter());\n  }\n\n  fetchStudents = () => {\n    const { name, course, is_captain, group: groupList, faculty, functionalGroup } = this.state;\n    const group = !isEmpty(groupList) && groupList;\n    this.props.fetchStudents({ name, course, group, is_captain, faculty, functional_group: functionalGroup });\n  }\n\n  handleFilter = () => {\n    this.fetchStudents();\n  }\n\n  handleSelectFilter = (value, type) => {\n    this.setState({ [type]: value, allStudents: false }, () => this.handleFilter())\n  }\n\n  handleAllStudents = (value) => {\n    this.setState({ allStudents: value, name: '', faculty: undefined, course: undefined, group: [], is_captain: false }, () => this.handleFilter())\n  }\n\n  addGroup = (currentGroup, isCheked) => {\n    if (isCheked && !this.state.group.includes(currentGroup)) {\n      this.setState(state => ({ group: state.group.concat(currentGroup) }), () => this.fetchStudents())\n    } else {\n        const groupArray = this.state.group.filter(g => g !== currentGroup);\n        this.setState(state => ({ group: groupArray }), () => this.fetchStudents())\n    }\n  }\n\n  onClose = () => this.setState({ showModal: false });\n\n  render() {\n    const { user: { profile }, checkedStudents, allChecked, faculties, functionalGroups } = this.props;\n    const { name, course, group, is_captain, allStudents, functionalGroup, faculty } = this.state;\n    const displayOptions = faculties.map((o) => (\n      <Option key={o} value={o.id}>\n        {o.name}\n      </Option>\n    ));\n    const displayGroupsOptions = functionalGroups.map((o) => (\n      <Option key={o} value={o.id}>\n        {o.title}\n      </Option>\n    ));\n    return (\n      <div className={s.wrapper}>\n        <div className={s.title}>{get(profile, 'faculty.name')}</div>\n        {get(profile, 'is_admin') && <div className='selectContainer'>\n          <Select\n            style={{ width: '100%' }}\n            placeholder=\"Выберите факультет\"\n            optionFilterProp=\"children\"\n            onChange={(value) => this.handleSelectFilter(value, 'faculty')}\n            value={this.state.faculty}\n            allowClear={true}\n          >\n            {displayOptions}\n          </Select>\n        </div>}\n        <div className={s.inputContainer}>\n          <Search\n            value={this.state.name}\n            placeholder=\"Diego Sanchez\"\n            style={{ width: '100%' }}\n            onChange={(e) => this.handleSelectFilter(e.currentTarget.value, 'name')}\n          />\n        </div>\n        <div className='selectContainer'>\n          <Select\n            style={{ width: '100%' }}\n            placeholder=\"Выберите функциональную группу\"\n            optionFilterProp=\"children\"\n            onChange={(value) => this.handleSelectFilter(value, 'functionalGroup')}\n            value={this.state.functionalGroup}\n            allowClear={true}\n          >\n            {displayGroupsOptions}\n          </Select>\n        </div>\n        <div className='selectContainer' onClick={() => this.setState({ showModal: true })}>\n          <Icon type=\"plus-circle\" style={{ marginRight: '10px', fontSize: '22px' }}/>\n          <span>Добавить студента в выбранную группу</span>\n        </div>\n        <AddStudentsToGroup\n          showModal={this.state.showModal}\n          onCancel={this.onClose}\n          displayGroupsOptions={displayGroupsOptions}\n          functionalGroup={this.state.functionalGroup}\n          handleChangeGroup={(value) => this.setState({ functionalGroup: value })}\n          checkedStudents={checkedStudents}\n        />\n        <div className='selectContainer'>\n          <SelectComponent value={this.state.course} fetchStudents={this.handleSelectFilter}\n          handleClear = {this.clearCours} />\n        </div>\n        <div className={s.checkboxContainer}>\n          <label>\n            <CheckBoxComponent\n              checked={this.state.is_captain}\n              callback={(value) => this.handleSelectFilter(value, 'is_captain')}\n            />\n            <span className={s.text}>только старостам</span>\n          </label>\n          <label>\n            <CheckBoxComponent\n              checked={this.state.allStudents}\n              callback={this.handleAllStudents}\n            />\n            <span className={s.text}>всем студентам</span>\n          </label>\n        </div>\n        <GroupsList fetchStudents={this.handleSelectFilter} course={this.state.course} currentCroup={this.state.group} addGroup = {this.addGroup} />\n        <SendForm filters={{name, course, group, is_captain, allStudents, allChecked, functionalGroup, faculty}} checkedStudents={checkedStudents} />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  faculties: facultySelector(state),\n  functionalGroups: state.root.functionalGroups.items\n});\n\nconst mapDispatchToProps = {\n  fetchStudents,\n  clearStudents\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MailingBlock);\n","import React from 'react';\nimport { Radio } from 'antd';\nimport \"antd/dist/antd.css\";\n\nconst RadioButton = ({ checked }) => {\n  return (\n    <div className='radio'>\n      <Radio checked={checked}/>\n    </div>\n  );\n};\n\nexport default RadioButton;\n\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Spin } from 'antd';\n\nimport CheckBoxComponent from '../../components/CheckBoxComponent/CheckBoxComponent';\nimport RadioButton from '../Radio/Radio';\nimport { studentsSelector, studentsIsLoading } from '../../selectors';\nimport s from './studentsList.module.scss';\n\nconst StudentsList = ({ students, allChecked, handleAllCheck, checkedStudents, handleCheckStundent, studentsIsLoading }) => {\n  return (\n    <div className={s.wrapper}>\n      <div className={s.rightCheckbox}>\n        <label>\n          <span className={s.rightCheckbox_text}>отметить всех</span>\n          <CheckBoxComponent callback={handleAllCheck} checked={allChecked} />\n        </label>\n      </div>\n      <div className={s.tableWrapper}>\n        <table>\n          <tr>\n            <th>Фамилия</th>\n            <th>Имя</th>\n            <th>Отчество</th>\n            <th>№ зачетки</th>\n            <th>Курс</th>\n            <th>Группа</th>\n            <th>Староста</th>\n            <th>В рассылке</th>\n          </tr>\n          {studentsIsLoading && <tr>\n            <th></th>\n            <th></th>\n            <th></th>\n            <th><Spin size=\"large\" /></th>\n            <th></th>\n            <th></th>\n            <th></th>\n            <th></th>\n          </tr>}\n          {!studentsIsLoading && students.map(student =>\n            <tr >\n              <th>{student.last_name}</th>\n              <th>{student.first_name}</th>\n              <th>{student.mid_name}</th>\n              <th>{student.student_card_number}</th>\n              <th>{student.group.course}</th>\n              <th>{student.group.name}</th>\n              <th><RadioButton checked={student.is_captain} /></th>\n              <th>\n                <CheckBoxComponent\n                  callback={(v) => handleCheckStundent(v, student.id)}\n                  checked={checkedStudents.includes(student.id)}\n                />\n              </th>\n            </tr>\n          )}\n        </table>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  students: studentsSelector(state),\n  studentsIsLoading: studentsIsLoading(state)\n});\n\nexport default connect(mapStateToProps, null)(StudentsList);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { isEqual } from 'lodash';\nimport { ROUTES } from '../../../constants';\nimport Header from '../../../components/Headers/MaillingHeader';\nimport MailingBlock from '../../../components/mailingBlock/MailingBlock';\nimport StudentsList from '../../../components/StudentsList/StudentsList';\nimport { authorisationHoc } from '../../../hoc/authorusationHoc';\nimport { getProfile } from '../../../actions/authorisation';\nimport { studentsSelector } from '../../../selectors';\nimport { fetchCourse, fetchFaculty, fetchFunctionalGroups } from '../../../actions';\nimport s from './mailing.module.scss';\n\nclass Mailing extends React.Component {\n  state = {\n    checkedStudents: [],\n    allChecked: true\n  };\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.props.fetchCourse();\n      this.props.fetchFaculty();\n      this.props.fetchFunctionalGroups();\n    } else {\n      const key = this.props.location.pathname.split('/')[1];\n      this.props.getProfile({\n        token: localStorage.getItem(ROUTES[key]),\n        pathname: key,\n        redirect: this.props.location.pathname\n      });\n    }\n  }\n\n  componentWillReceiveProps({ students, user }) {\n    if (!isEqual(students, this.props.students)) {\n      if (this.state.allChecked) {\n        this.setState({ checkedStudents: students.map((s) => s.id) });\n      } else {\n        this.setState({ checkedStudents: [] });\n      }\n    }\n\n    if (!isEqual(user, this.props.user) && user) {\n      this.props.fetchCourse();\n      this.props.fetchFaculty();\n      this.props.fetchFunctionalGroups();\n    }\n  }\n\n  changeAllCheck = (value) => {\n    return value ? this.props.students.map((student) => student.id) : [];\n  };\n\n  handleAllCheck = (value) =>\n    this.setState({\n      allChecked: value,\n      checkedStudents: this.changeAllCheck(value)\n    });\n\n  handleCheckStundent = (value, id) => {\n    if (value) {\n      this.setState((state) => ({\n        checkedStudents: state.checkedStudents.concat(id),\n        allChecked:\n          state.checkedStudents.concat(id).length === this.props.students.length\n      }));\n    } else {\n      this.setState((state) => ({\n        checkedStudents: state.checkedStudents.filter((i) => i !== id),\n        allChecked: false\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <div className={s.wrapper}>\n        <div className={s.content}>\n          <Header />\n          <div className={s.contentBlocks}>\n            <MailingBlock\n              allChecked={this.state.allChecked}\n              checkedStudents={this.state.checkedStudents}\n            />\n            <StudentsList\n              allChecked={this.state.allChecked}\n              handleAllCheck={this.handleAllCheck}\n              checkedStudents={this.state.checkedStudents}\n              handleCheckStundent={this.handleCheckStundent}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.profile,\n    students: studentsSelector(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  getProfile,\n  fetchCourse,\n  fetchFaculty,\n  fetchFunctionalGroups\n};\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(authorisationHoc(Mailing));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Icon, Modal, Input, Button, Form } from 'antd';\n\nimport { createGroupStart } from '../../actions';\nimport s from './index.module.scss';\n\nclass AddNewGroup extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      this.props.createGroupStart({ params: values });\n    });\n  }\n\n  render() {\n    const { form: { getFieldDecorator } } = this.props;\n\n    return (\n      <Modal\n        centered\n        visible={this.props.showModal}\n        onCancel={this.props.onCancel}\n        closeIcon={<Icon type=\"close-circle\" style={{ fontSize: '20px' }}/>}\n        footer={null}\n      >\n        <div className={s.modalContent}>\n          <div className={s.modalTitle}>\n            Создание новой функциональной группы\n          </div>\n          <div className={s.modalForm}>\n            <Form onSubmit={this.handleSubmit}>\n              <div className={s.modalFormLabel}>\n                Наименование группы\n              </div>\n              {getFieldDecorator('title', {\n                initialValue: ''\n              })(\n                <div className='sendForm__inputContainer'>\n                  <Input placeholder='Введите название группы, до 50 символов' />\n                </div>\n              )}\n                <div className={s.modalFormLabel}>\n                  Описание группы\n                </div>\n              {getFieldDecorator('description', {\n                initialValue: ''\n              })(\n                <div className='sendForm__textareaContainer'>\n                  <Input.TextArea placeholder=\"Введите любое описание, до 200 символов\" rows={8} ></Input.TextArea>\n                </div>\n              )}\n              <div className={s.buttonContainer}>\n                <div className='buttonWrapper'>\n                  <Button type=\"primary\" shape=\"round\" size='large' htmlType=\"submit\">\n                    Добавить\n                  </Button>\n                </div>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  createGroupStart,\n};\n\nexport default compose(\n  connect(\n    null,\n    mapDispatchToProps\n  )\n)((Form.create()(AddNewGroup)));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Icon, Modal, Input, Button, Form, Checkbox } from 'antd';\nimport { get } from 'lodash';\n\nimport CheckBoxComponent from '../../components/CheckBoxComponent/CheckBoxComponent';\nimport { updateFunctionalGroup } from '../../actions';\nimport s from './index.module.scss';\n\nconst InputComponent = ({ value, placeholder, onChange }) => {\n  return <div className='sendForm__inputContainer'>\n    <Input placeholder={placeholder} value={value} onChange={onChange} />\n  </div>;\n}\n\nclass EditGroup extends React.Component {\n  state = { checkedAll: true }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      this.props.updateFunctionalGroup({\n        id: get(this.props, 'editGroup.id'),\n        params: {\n          title: values.title,\n          description: get(this.props, 'editGroup.description'),\n          students: values.students\n        }\n      });\n    });\n  }\n\n  handleChange = value => {\n    this.setState({ checkedAll: value }, () => {\n      if (this.state.checkedAll) {\n        this.props.form.setFieldsValue({ students: get(this.props, 'editGroup.students', []).map((student, index) => student.id) });\n      } else {\n        this.props.form.setFieldsValue({ students: [] });\n      }\n    });\n  }\n\n  render() {\n    const { form: { getFieldDecorator }, editGroup } = this.props;\n\n    return (\n      <Modal\n        centered\n        visible={this.props.showModal}\n        onCancel={this.props.onCancel}\n        closeIcon={<Icon type=\"close-circle\" style={{ fontSize: '20px' }}/>}\n        footer={null}\n        width={700}\n      >\n        <div className={s.modalContent}>\n          <div className={s.modalTitle}>\n            Управление функциональной группой\n          </div>\n          <div className={s.modalForm}>\n            <Form onSubmit={this.handleSubmit}>\n              <div className={s.modalFormLabel}>\n                Наименование группы\n              </div>\n              {getFieldDecorator('title', {\n                initialValue: get(editGroup, 'title', '')\n              })(\n                <InputComponent placeholder='Наименование' />\n              )}\n              <div className={s.modalFormLabel}>\n                Группу создал\n              </div>\n              {getFieldDecorator('owner', {\n                initialValue: get(editGroup, 'employee.full_name', '')\n              })(\n                <InputComponent placeholder='ФИО' />\n              )}\n              <div className={s.studentsLabelWrapper}>\n                <span>Список студентов данной группы (Всего {get(editGroup, 'students', []).length} чел)</span>\n                <div className={s.rightCheckbox}>\n                  <label>\n                    <span className={s.rightCheckbox_text}>отметить всех</span>\n                    <CheckBoxComponent callback={this.handleChange} checked={this.state.checkedAll} />\n                  </label>\n                </div>\n              </div>\n              {getFieldDecorator('students', {\n                initialValue: get(editGroup, 'students', []).map((student, index) => student.id),\n              })(\n                <Checkbox.Group>\n                  <div className={s.sudentsContent}>\n                    {get(editGroup, 'students', []).map((student, index) =>\n                      <div className={s.sudentsWrapper}>\n                        <label>\n                          <span>{`${index + 1}. ${student.last_name} ${student.first_name} ${student.mid_name}`}</span>\n                          <Checkbox value={student.id}></Checkbox>\n                        </label>\n                      </div>\n                    )}\n                  </div>\n                </Checkbox.Group>\n              )}\n              <div className={s.buttonContainer}>\n                <div className='buttonWrapper'>\n                  <Button type=\"primary\" shape=\"round\" size='large' htmlType=\"submit\">\n                    Сохранить\n                  </Button>\n                </div>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateFunctionalGroup,\n};\n\nexport default compose(\n  connect(\n    null,\n    mapDispatchToProps\n  )\n)((Form.create()(EditGroup)));\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { get, isEqual, isEmpty } from 'lodash';\nimport { Icon } from 'antd';\n\nimport { fetchFunctionalGroups, destroyFunctionalGroup } from '../../actions';\nimport { ROUTES } from '../../constants';\nimport Header from '../../components/Headers/MaillingHeader';\nimport AddNewGroup from './AddNewGroup';\nimport EditGroup from './EditGroup';\nimport { authorisationHoc } from '../../hoc/authorusationHoc';\nimport { getProfile } from '../../actions/authorisation';\nimport s from './index.module.scss';\n\nclass GroupsPage extends React.Component {\n  state = {\n    showEditModal: {},\n    showNewModal: false\n  };\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.props.fetchFunctionalGroups();\n    } else {\n      const key = this.props.location.pathname.split('/')[1];\n      this.props.getProfile({\n        token: localStorage.getItem(ROUTES[key]),\n        pathname: key,\n        redirect: this.props.location.pathname\n      });\n    }\n  }\n\n  componentWillReceiveProps({ user, functionalGroups }) {\n    if (!isEqual(user, this.props.user) && user) {\n      this.props.fetchFunctionalGroups();\n    }\n\n    if (!isEqual(functionalGroups, this.props.functionalGroups)) {\n      this.onCloseNewModal();\n      this.onCloseEditModal();\n    }\n  }\n\n  onCloseNewModal = () => this.setState({ showNewModal: false });\n  onCloseEditModal = () => this.setState({ showEditModal: {} });\n\n  render() {\n    const { user, functionalGroups } = this.props;\n    const { showEditModal } = this.state;\n\n    return (\n      <div className={s.wrapper}>\n        <div className={s.content}>\n          {user && <Header rector={get(user, 'is_rector')} />}\n          <div className={s.title}>\n            <div className={s.titleWrapper} onClick={() => this.setState({ showNewModal: true })}>\n              <Icon type=\"plus-circle\" style={{ marginRight: '10px', fontSize: '22px' }}/>\n              <span>Создать новую функциональную группу</span>\n            </div>\n          </div>\n          <AddNewGroup showModal={this.state.showNewModal} onCancel={this.onCloseNewModal} />\n          <EditGroup showModal={!isEmpty(showEditModal)} onCancel={this.onCloseEditModal} editGroup={showEditModal} />\n          <div className={s.table}>\n            <div className={s.tableWrapper}>\n              <div className={s.head}>\n                <div className={s.firstBlock}>\n                  Наименование группы\n                </div>\n                <div className={s.secondBlock}>\n                  Описание группы\n                </div>\n                <div className={s.thirdBlock}>\n                </div>\n              </div>\n              {functionalGroups && functionalGroups.map(message =>\n                <div key={message.id}>\n                  <div className={s.message}>\n                    <div className={s.firstBlock}>\n                      <div className={s.messageTitle}>\n                        {message.title}\n                      </div>\n                    </div>\n                    <div className={s.secondBlock}>\n                      {message.description}\n                    </div>\n                    <div className={s.thirdBlock}>\n                      <Icon type=\"form\" className={s.icon} style={{ marginRight: '30px' }} onClick={() => this.setState({ showEditModal: message })}/>\n                      <Icon type=\"close\" className={s.icon} onClick={() => this.props.destroyFunctionalGroup({ id: message.id })}/>\n                    </div>\n                  </div>\n                  <div className={s.border}></div>\n                </div>\n              )}\n            </div>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.profile,\n    functionalGroups: state.root.functionalGroups.items\n  };\n};\n\nconst mapDispatchToProps = {\n  getProfile,\n  fetchFunctionalGroups,\n  destroyFunctionalGroup\n};\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(authorisationHoc(GroupsPage));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router\";\nimport { get, first, isEqual, last, isArray } from \"lodash\";\nimport { Row, Col } from 'antd';\n\nimport { ROUTES, ICONS } from \"../../constants\";\nimport { fetchSchedule, setSchedule } from \"../../actions\";\nimport { scheduleSelector } from \"../../selectors\";\nimport { getProfile, loginRowguid } from \"../../actions/authorisation\";\nimport {\n  groupSelector,\n  studentFacultySelector\n} from \"../../selectors/userSelectors\";\nimport s from \"./schedule.module.scss\";\nimport Header from \"../../components/Headers/MessagesHeader\";\nimport { authorisationHoc } from '../../hoc/authorusationHoc';\n\nclass Schedule extends React.Component {\n  componentDidMount() {\n    if (this.props.user.profile) {\n      const language = this.props.user.localisationMode ? \"ru\" : \"en\";\n      this.props.fetchSchedule({ language });\n    } else {\n      const key = this.props.location.pathname.split('/')[1];\n      this.props.getProfile({\n        token: localStorage.getItem(ROUTES[key]),\n        pathname: key,\n        redirect: this.props.location.pathname\n      });\n    }\n  }\n\n  componentWillReceiveProps({ user: { profile } }) {\n    if (!isEqual(profile, this.props.user.profile) && profile) {\n      const language = this.props.user.localisationMode ? \"ru\" : \"en\";\n      this.props.fetchSchedule({ language });\n    }\n  }\n\n  renderTiming = (text) => {\n    const items = text.split(':');\n    return (\n      <>\n        <div className={s.itemTitle}>{items[0] + ':'}</div>\n        <div className={s.itemText}>{items[1]}</div>\n      </>\n    );\n  }\n\n  renderInfoItem = (item, index) => {\n    if (Object.keys(item).includes('file')) {\n      return <div className={s.downloadExams} key={index}>\n        <div className={s.downloadTitle}>\n          <a\n            className={s.downloadText}\n            href={item.file}\n          >\n            Скачать\n          </a>\n          <span className={s.infoText}>{` ${item.text}`}</span>\n        </div>\n        <a\n            className={s.downloadText}\n            href={item.file}\n        >\n          <div className={s.downloadIcon}>\n            <img src={ICONS[last(item.file.split('.'))]} className={s.docFile} alt='doc'/>\n            <p className={s.filename}>\n              {last(item.file.split('/'))}\n            </p>\n          </div>\n        </a>\n      </div>\n    } else {\n      return <div className={s.downloadExams} key={index}>\n        <div className={s.downloadTitle}>\n          <a\n            className={s.downloadText}\n            href={item.link}\n          >\n            Ссылка на\n          </a>\n          <span className={s.infoText}>{` ${item.text}`}</span>\n        </div>\n        <a\n          className={s.linkText}\n          href={item.link}\n        >\n          {item.link}\n        </a>\n      </div>\n    }\n  }\n\n  render() {\n    const { schedule } = this.props;\n    let infoItems = [];\n    if (isArray(get(schedule, \"links.exams\", []))) {\n      infoItems = get(schedule, \"links.exams\", []).concat(get(schedule, \"links.more\", []));\n    } else {\n      infoItems.push(get(schedule, \"links.exams\", {}));\n      infoItems = infoItems.concat(get(schedule, \"links.more\", []));\n    }\n\n    return (\n      <div className={s.wrapper}>\n        <div className={s.content}>\n          <Header />\n          <div className={s.head}>\n            <div className={s.title}>{`${this.props.faculty}`}</div>\n          </div>\n          <div className={s.container}>\n            <Row>\n              <Col span={12}>\n                <div className={s.studentInfo}>\n                  <div className={s.course}>\n                    <div className={s.itemTitle}>Курс:</div>\n                    <div className={s.itemText}>{get(first(get(schedule, \"links.timetable\", [])), \"text\", \"\")}</div>\n                  </div>\n                  <div className={s.group}>\n                    <div className={s.itemTitle}>Группа:</div>\n                    <div className={s.itemText}>{this.props.group}</div>\n                  </div>\n                </div>\n                <div className={s.timing}>\n                  {get(schedule, \"links.timing\", []).map((item, index) => (\n                    <div className={s.dates} key={index}>\n                      {this.renderTiming(item.text)}\n                    </div>\n                  ))}\n                </div>\n                <div className={s.other}>\n                  {get(schedule, \"links.other\", []).map((item, index) => (\n                    <div className={s.otherText} key={index}>\n                      {item.text}\n                    </div>\n                  ))}\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={s.downloadPart}>\n                  {infoItems.map((item, index) => this.renderInfoItem(item, index))}\n                </div>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    group: groupSelector(state),\n    faculty: studentFacultySelector(state),\n    schedule: scheduleSelector(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  getProfile,\n  fetchSchedule,\n  setSchedule,\n  loginRowguid\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(authorisationHoc(Schedule));\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\nimport AuthorizationStudentContainer from './containers/AuthorisationContainer';\nimport HistoryMail from './pages/Mail/HistoryMail/HistoryMail';\nimport Messages from './pages/Messages/Messages';\nimport Message from './pages/Message/Message';\nimport Mailing from './pages/Mail/Mailing/Mailing';\nimport Groups from './pages/Groups';\nimport Schedule from './pages/Schedule/Schedule';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={AuthorizationStudentContainer} />\n        <Route path=\"/rector-mail-history\" component={HistoryMail} />\n        <Route path=\"/mail-history\" component={HistoryMail} />\n        <Route path=\"/groups\" component={Groups} />\n        <Route path=\"/messages/:id\" component={Message} />\n        <Route path=\"/messages\" component={Messages} />\n        <Route path=\"/mailing\" component={Mailing} />\n        <Route path=\"/schedule\" component={Schedule} />\n        <Route path=\"/login/student\" component={AuthorizationStudentContainer} />\n        <Route path=\"/login/employee\" component={AuthorizationStudentContainer} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { IntlProviderWrapper } from \"././i18n/IntlContext\";\nimport store from './redusers/index';\nimport { HashRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <IntlProviderWrapper>\n                <HashRouter>\n                    <App />\n                </HashRouter>\n            </IntlProviderWrapper>\n        </Provider>,\n        document.getElementById('root'));\n}\n\nif (window.cordova) {\n    document.addEventListener('deviceready', () => {\n        renderReactDom();\n    }, false);\n} else {\n    renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"historyMail_wrapper__2gDHP\",\"content\":\"historyMail_content__2XDs6\",\"select\":\"historyMail_select__3eVao\",\"checkbox\":\"historyMail_checkbox__158UU\",\"text\":\"historyMail_text__1Hptd\",\"title\":\"historyMail_title__3U4vL\",\"subTitle\":\"historyMail_subTitle__1HCPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesList\":\"messagesList_messagesList__3X_29\",\"messageHeader\":\"messagesList_messageHeader__bcROr\",\"message\":\"messagesList_message__j3fyX\",\"date\":\"messagesList_date__3rOj4\",\"messagesNotFoundWrapper\":\"messagesList_messagesNotFoundWrapper__3KPzB\",\"messagesNotFound\":\"messagesList_messagesNotFound__1YXgt\",\"loadMore\":\"messagesList_loadMore__2iHQM\",\"messageText\":\"messagesList_messageText__1mlcB\",\"unreadMessage\":\"messagesList_unreadMessage__-vCQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"authorisation_wrapper__3NK5R\",\"inputContainer\":\"authorisation_inputContainer__2o7bM\",\"loginContainer\":\"authorisation_loginContainer__1iKyj\",\"buttonsContainer\":\"authorisation_buttonsContainer__3ZGdL\",\"content\":\"authorisation_content__3OM3P\",\"title\":\"authorisation_title__3VLuD\",\"buttonText\":\"authorisation_buttonText__2eg2p\",\"switchContainer\":\"authorisation_switchContainer__2RE9W\",\"en\":\"authorisation_en__2YPLm\",\"ru\":\"authorisation_ru__2l8WL\",\"errorContainer\":\"authorisation_errorContainer__DjBWS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"message_wrapper__SDCF5\",\"content\":\"message_content__uDZnw\",\"link\":\"message_link__1niBw\",\"fileWrapper\":\"message_fileWrapper__71lKe\",\"date\":\"message_date__3mYpl\",\"title\":\"message_title__2GISP\",\"message\":\"message_message__3-RUj\",\"file\":\"message_file__2s5YO\",\"document\":\"message_document__qK4d4\",\"buttonsContainer\":\"message_buttonsContainer__2Bb2p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"messages_wrapper__33r65\",\"content\":\"messages_content__3rgS4\",\"checkboxWrapper\":\"messages_checkboxWrapper__SyKzz\",\"title\":\"messages_title__19EYE\",\"head\":\"messages_head__28Ekg\",\"logout\":\"messages_logout__1u_7w\",\"logoutContainer\":\"messages_logoutContainer__fyDXI\",\"messagesList\":\"messages_messagesList__1Kbov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"mailingBlock_title__2IzGY\",\"checkboxContainer\":\"mailingBlock_checkboxContainer__1H3X6\",\"text\":\"mailingBlock_text__3X66u\",\"wrapper\":\"mailingBlock_wrapper__3rmQl\",\"inputContainer\":\"mailingBlock_inputContainer__1yEHm\",\"selectContainer\":\"mailingBlock_selectContainer__31dUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"sendForm_wrapper__3Qr35\",\"icon\":\"sendForm_icon__3uqjK\",\"file\":\"sendForm_file__eDYA_\",\"buttonContainer\":\"sendForm_buttonContainer__2vgTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"studentsList_wrapper__2n0g_\",\"spinWrapper\":\"studentsList_spinWrapper__3hDvC\",\"tableWrapper\":\"studentsList_tableWrapper__3FNb0\",\"rightCheckbox\":\"studentsList_rightCheckbox__WjBV1\",\"rightCheckbox_text\":\"studentsList_rightCheckbox_text__2dyFs\"};"],"sourceRoot":""}